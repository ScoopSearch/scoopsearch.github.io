{"version":3,"sources":["components/NavBar.tsx","components/SearchBar.tsx","components/SearchStatus.tsx","serialization/DateConverter.ts","serialization/MetadataJson.ts","serialization/ManifestJson.ts","serialization/SearchResultsJson.ts","components/SearchProcessor.tsx","components/SearchPagination.tsx","components/CopyToClipboardButton.tsx","components/SearchResult.tsx","components/CopyToClipboardHandler.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["NavBar","Navbar","expand","bg","variant","Brand","href","Toggle","aria-controls","Collapse","id","Nav","className","Link","size","PureComponent","SearchBar","props","searchInput","delayBeforeSearch","handleChange","e","setState","query","target","value","clearDelayBeforeSearchTimeout","setTimeout","onQueryChange","handleSubmit","preventDefault","state","React","createRef","this","current","focus","clearTimeout","undefined","Form","onSubmit","InputGroup","Prepend","Text","Control","ref","type","placeholder","onChange","defaultProps","SearchStatus","searching","Spinner","animation","resultsCount","DateConverter","JsonConverter","date","Error","Date","MetadataJson","JsonObject","JsonProperty","String","Boolean","ManifestJson","Number","Any","propertyName","fallback","tryGetHighlights","propertyNames","_highlights","name","tryGetHighlight","license","metadata","repository","replace","authorName","description","version","homepage","parser","document","createElement","origin","SearchResultsJson","jsonObject","jsonConvert","deserializeObject","JsonConvert","Array","SearchProcessor","abortController","AbortController","sortModes","DisplayName","OrderBy","handleSortChange","onSortIndexChange","selectedIndex","fetchDataAsync","signal","prevProps","prevState","page","sortIndex","abort","abortSignal","url","process","fetch","method","body","JSON","stringify","count","search","trim","orderby","join","skip","resultsPerPage","top","select","highlight","highlightPreTag","highlightPostTag","headers","then","response","ok","status","statusText","json","data","results","Create","onResultsChange","catch","error","console","Row","Col","lg","as","custom","map","item","idx","key","SearchPagination","changePage","total_pages","Math","ceil","max","min","onPageChange","currentPage","totalPages","paginationItems","pageIdx","push","Pagination","Ellipsis","disabled","Item","active","onClick","Prev","Next","CopyToClipboardButton","handleClick","copied","Button","dayjs","extend","localizedFormat","SearchResult","handleCopyToClipboard","content","onCopyToClipbard","displayHighlight","dangerouslySetInnerHTML","__html","result","score","favicon","highlightedName","highlightedDescription","highlightedLicense","highlightedRepository","highlightedAuthorName","highlightedVersion","Card","Header","src","width","height","repositoryOfficial","color","Body","Container","committed","format","split","pop","noGutters","xs","filePath","sha","readOnly","Append","CopyToClipboardHandler","textAreaRef","textArea","execCommand","blur","onContentCopied","style","position","left","App","handleQueryChange","sessionStorage","setItem","handleResultsChange","searchResults","handlePageChange","newPage","toString","contentToCopy","handleContentCopied","getItem","parseInt","sm","searchResult","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.345290fb.chunk.js","sourcesContent":["import React, { PureComponent } from 'react';\nimport { Navbar, Nav } from 'react-bootstrap';\nimport { FaGithub } from 'react-icons/fa';\n\nclass NavBar extends PureComponent {\n  render() {\n    return (\n      <Navbar expand=\"sm\" bg=\"dark\" variant=\"dark\">\n        <Navbar.Brand href=\"#home\">ScoopSearch</Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n        <Navbar.Collapse id=\"responsive-navbar-nav\">\n          <Nav className=\"mr-auto\">\n            <Nav.Link href=\"#apps\">Apps</Nav.Link>\n            <Nav.Link href=\"#buckets\">Buckets</Nav.Link>\n          </Nav>\n          <Nav>\n            <Nav.Link href=\"https://github.com/ScoopSearch\">\n              <FaGithub size=\"1.2em\" />\n            </Nav.Link>\n          </Nav>\n        </Navbar.Collapse>\n      </Navbar>\n    );\n  }\n}\n\nexport default NavBar;\n","import React, { PureComponent } from 'react';\nimport {\n  ISearchBarProps,\n  ISearchBarState,\n} from '../interfaces/ISearchBar.interfaces';\nimport { Form, InputGroup } from 'react-bootstrap';\nimport { FaSearch } from 'react-icons/fa';\n\nconst DELAY_SEARCH_AFTER_KEYPRESS: number = 250;\n\nclass SearchBar extends PureComponent<ISearchBarProps, ISearchBarState> {\n  static defaultProps = {\n    query: '',\n  };\n\n  searchInput: React.RefObject<HTMLInputElement>;\n  delayBeforeSearch?: NodeJS.Timeout;\n\n  constructor(props: ISearchBarProps) {\n    super(props);\n    this.searchInput = React.createRef<HTMLInputElement>();\n\n    this.state = {\n      query: this.props.query,\n    };\n  }\n\n  componentDidMount() {\n    this.searchInput.current!.focus();\n  }\n\n  componentWillUnmount() {\n    this.clearDelayBeforeSearchTimeout();\n  }\n\n  handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ query: e.target.value });\n\n    this.clearDelayBeforeSearchTimeout();\n\n    this.delayBeforeSearch = setTimeout(\n      (query) => this.props.onQueryChange(query),\n      DELAY_SEARCH_AFTER_KEYPRESS,\n      e.target.value\n    );\n  };\n\n  handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    this.props.onQueryChange(this.state.query);\n  };\n\n  clearDelayBeforeSearchTimeout() {\n    if (this.delayBeforeSearch) {\n      clearTimeout(this.delayBeforeSearch);\n      this.delayBeforeSearch = undefined;\n    }\n  }\n\n  render() {\n    return (\n      <Form onSubmit={this.handleSubmit}>\n        <InputGroup>\n          <InputGroup.Prepend>\n            <InputGroup.Text>\n              <FaSearch />\n            </InputGroup.Text>\n          </InputGroup.Prepend>\n          <Form.Control\n            ref={this.searchInput}\n            size=\"lg\"\n            type=\"text\"\n            placeholder=\"Search an app\"\n            value={this.state.query}\n            onChange={this.handleChange}\n          />\n        </InputGroup>\n      </Form>\n    );\n  }\n}\n\nexport default SearchBar;\n","import React, { PureComponent } from 'react';\nimport { Spinner } from 'react-bootstrap';\nimport { ISearchStatusProps } from '../interfaces/ISearchStatus.interfaces';\n\nclass SearchStatus extends PureComponent<ISearchStatusProps> {\n  render() {\n    if (this.props.searching) {\n      return (\n        <span>\n          <span>Searching for matching applications...</span>{' '}\n          <Spinner animation=\"border\" size=\"sm\" variant=\"secondary\" />\n        </span>\n      );\n    } else if (this.props.resultsCount) {\n      return (\n        <span>\n          Found {this.props.resultsCount} applications\n          {this.props.query && (\n            <span>\n              {' '}\n              for '<strong>{this.props.query}</strong>'\n            </span>\n          )}\n          .\n        </span>\n      );\n    } else {\n      return (\n        <span>\n          No result found for '<strong>{this.props.query}</strong>'\n        </span>\n      );\n    }\n  }\n}\n\nexport default SearchStatus;\n","import { JsonConverter, JsonCustomConvert } from 'json2typescript';\n\n@JsonConverter\nexport class DateConverter implements JsonCustomConvert<Date> {\n  serialize(date: Date): any {\n    throw new Error('Conversion not supported');\n  }\n  deserialize(date: any): Date {\n    return new Date(date);\n  }\n}\n","import { JsonObject, JsonProperty } from 'json2typescript';\nimport { DateConverter } from './DateConverter';\n\n@JsonObject('MetadataJson')\nexport class MetadataJson {\n  @JsonProperty('Repository', String)\n  repository: string = '';\n\n  @JsonProperty('OfficialRepository', Boolean)\n  repositoryOfficial: boolean = false;\n\n  @JsonProperty('BranchName', String, true)\n  branchName?: string = '';\n\n  @JsonProperty('FilePath', String)\n  filePath: string = '';\n\n  @JsonProperty('AuthorName', String)\n  authorName: string = '';\n\n  @JsonProperty('Committed', DateConverter)\n  committed: Date = new Date();\n\n  @JsonProperty('Sha', String)\n  sha: string = '';\n}\n","import { JsonObject, JsonProperty, Any } from 'json2typescript';\nimport { MetadataJson } from './MetadataJson';\n\n@JsonObject('ManifestJson')\nexport class ManifestJson {\n  @JsonProperty('Id', String)\n  id: string = '';\n\n  @JsonProperty('@search.score', Number)\n  score: number = 0;\n\n  @JsonProperty('NameStandard', String)\n  name: string = '';\n\n  @JsonProperty('NamePartial', String)\n  namePartial: string = '';\n\n  @JsonProperty('NameSuffix', String)\n  nameSuffix: string = '';\n\n  @JsonProperty('Description', String, true)\n  description?: string = undefined;\n\n  @JsonProperty('Homepage', String, true)\n  homepage?: string = undefined;\n\n  @JsonProperty('License', String, true)\n  license?: string = undefined;\n\n  @JsonProperty('Version', String, true)\n  version: string = '';\n\n  @JsonProperty('Metadata', MetadataJson)\n  metadata: MetadataJson = new MetadataJson();\n\n  @JsonProperty('@search.highlights', Any, true)\n  private _highlights: any = undefined;\n\n  get highlightedName() {\n    return this.tryGetHighlights(\n      ['NameStandard', 'NamePartial', 'NameSuffix'],\n      this.name\n    );\n  }\n\n  get highlightedLicense() {\n    return this.tryGetHighlight('License', this.license);\n  }\n\n  get highlightedRepository() {\n    return this.tryGetHighlight(\n      'Metadata/Repository',\n      this.metadata.repository.replace('https://github.com/', '')\n    );\n  }\n\n  get highlightedAuthorName() {\n    return this.tryGetHighlight(\n      'Metadata/AuthorName',\n      this.metadata.authorName\n    );\n  }\n\n  get highlightedDescription() {\n    return this.tryGetHighlight('Description', this.description);\n  }\n\n  get highlightedVersion() {\n    return this.tryGetHighlight('Version', this.version);\n  }\n\n  tryGetHighlight(propertyName: string, fallback?: string) {\n    return this.tryGetHighlights([propertyName], fallback);\n  }\n\n  tryGetHighlights(propertyNames: string[], fallback?: string) {\n    for (const propertyName of propertyNames) {\n      if (this._highlights && this._highlights[propertyName]) {\n        return this._highlights[propertyName][0];\n      }\n    }\n\n    return fallback;\n  }\n\n  get favicon() {\n    if (this.homepage) {\n      var parser = document.createElement('a');\n      parser.href = this.homepage;\n\n      return parser.origin + '/favicon.ico';\n    }\n\n    return undefined;\n  }\n}\n","import { JsonObject, JsonConvert, JsonProperty } from 'json2typescript';\nimport { ManifestJson } from './ManifestJson';\n\n@JsonObject('SearchResultsJson')\nexport class SearchResultsJson {\n  private static jsonConvert = new JsonConvert();\n\n  static Create(jsonObject: any) {\n    return SearchResultsJson.jsonConvert.deserializeObject(\n      jsonObject,\n      SearchResultsJson\n    );\n  }\n\n  @JsonProperty('@odata.count', Number)\n  count: number = 0;\n\n  @JsonProperty('value', [ManifestJson])\n  results: ManifestJson[] = Array<ManifestJson>();\n}\n","import React, { PureComponent } from 'react';\nimport {\n  ISearchProcessorProps,\n  ISearchProcessorState,\n} from '../interfaces/ISearchProcessor.interfaces';\n\nimport { Col, Row, Form, InputGroup } from 'react-bootstrap';\nimport SearchStatus from './SearchStatus';\nimport { SearchResultsJson } from '../serialization/SearchResultsJson';\n\nclass SearchProcessor extends PureComponent<\n  ISearchProcessorProps,\n  ISearchProcessorState\n> {\n  private abortController: AbortController = new AbortController();\n\n  private sortModes: ISortMode[] = [\n    {\n      DisplayName: 'Best match',\n      OrderBy: [\n        'search.score() desc',\n        'Metadata/OfficialRepositoryNumber desc',\n        'NameNormalized asc',\n      ],\n    },\n    {\n      DisplayName: 'Name',\n      OrderBy: [\n        'NameNormalized asc',\n        'Metadata/OfficialRepositoryNumber desc',\n        'Metadata/RepositoryStars desc',\n        'Metadata/Committed desc',\n      ],\n    },\n    {\n      DisplayName: 'Newest',\n      OrderBy: [\n        'Metadata/Committed desc',\n        'Metadata/OfficialRepositoryNumber desc',\n        'Metadata/RepositoryStars desc',\n      ],\n    },\n  ];\n\n  constructor(props: ISearchProcessorProps) {\n    super(props);\n\n    this.state = {\n      resultsCount: undefined,\n      searching: false,\n    };\n  }\n\n  componentDidMount() {\n    this.fetchDataAsync(this.abortController.signal, this.props.query);\n  }\n\n  componentDidUpdate(\n    prevProps: ISearchProcessorProps,\n    prevState: ISearchProcessorState\n  ) {\n    if (\n      this.props.query !== prevProps.query ||\n      this.props.page !== prevProps.page ||\n      this.props.sortIndex !== prevProps.sortIndex\n    ) {\n      this.abortController.abort();\n      this.abortController = new AbortController();\n      this.fetchDataAsync(this.abortController.signal, this.props.query);\n    }\n  }\n\n  componentWillUnmount() {\n    this.abortController.abort();\n  }\n\n  handleSortChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    this.props.onSortIndexChange(e.target.selectedIndex);\n  };\n\n  fetchDataAsync(abortSignal: AbortSignal, query: string) {\n    this.setState({\n      searching: true,\n    });\n\n    const url = `${process.env.REACT_APP_AZURESEARCH_URL}/search?api-version=2020-06-30`;\n\n    fetch(url, {\n      method: 'POST',\n      body: JSON.stringify({\n        count: true,\n        search: query.trim(),\n        orderby: this.sortModes[this.props.sortIndex].OrderBy.join(', '),\n        skip: (this.props.page - 1) * this.props.resultsPerPage,\n        top: this.props.resultsPerPage,\n        select: [\n          'Id',\n          'NameStandard',\n          'NamePartial',\n          'NameSuffix',\n          'Description',\n          'Homepage',\n          'License',\n          'Version',\n          'Metadata/Repository',\n          'Metadata/FilePath',\n          'Metadata/AuthorName',\n          'Metadata/OfficialRepository',\n          'Metadata/Committed',\n          'Metadata/Sha',\n        ].join(','),\n        highlight: [\n          'NameStandard',\n          'NamePartial',\n          'NameSuffix',\n          'Description',\n          'Version',\n          'License',\n          'Metadata/Repository',\n          'Metadata/AuthorName',\n        ].join(','),\n        highlightPreTag: '<mark>',\n        highlightPostTag: '</mark>',\n      }),\n      headers: {\n        'api-key': process.env.REACT_APP_AZURESEARCH_KEY!,\n        'Content-Type': 'application/json',\n      },\n      signal: abortSignal,\n    })\n      .then((response) => {\n        if (!response.ok) {\n          throw new Error(`${response.status} ${response.statusText}`);\n        }\n\n        return response.json();\n      })\n      .then((data) => {\n        const results = SearchResultsJson.Create(data);\n\n        this.setState({\n          searching: false,\n          resultsCount: results.count,\n        });\n        this.props.onResultsChange(results);\n      })\n      .catch((error: Error) => {\n        if (error.name !== 'AbortError') {\n          this.setState({\n            searching: false,\n            resultsCount: undefined,\n          });\n          this.props.onResultsChange(undefined);\n          console.error(error);\n        }\n      });\n  }\n\n  render() {\n    return (\n      <Form>\n        <Row>\n          <Col className=\"my-auto\">\n            <SearchStatus\n              query={this.props.query}\n              resultsCount={this.state.resultsCount!}\n              searching={this.state.searching!}\n            />\n          </Col>\n          <Col lg={3}>\n            <InputGroup size=\"sm\">\n              <InputGroup.Prepend>\n                <InputGroup.Text>Sort by</InputGroup.Text>\n              </InputGroup.Prepend>\n              <Form.Control\n                as=\"select\"\n                size=\"sm\"\n                custom\n                value={this.props.sortIndex}\n                onChange={this.handleSortChange}\n              >\n                {this.sortModes.map((item, idx) => (\n                  <option key={idx} value={idx}>\n                    {item.DisplayName}\n                  </option>\n                ))}\n              </Form.Control>\n            </InputGroup>\n          </Col>\n        </Row>\n      </Form>\n    );\n  }\n}\n\ninterface ISortMode {\n  DisplayName: string;\n  OrderBy: string[];\n}\n\nexport default SearchProcessor;\n","import React, { PureComponent } from 'react';\nimport { ISearchPaginationProps } from '../interfaces/ISearchPagination.interfaces';\n\nimport { Pagination } from 'react-bootstrap';\n\nconst PAGINATION_OFFSET: number = 2;\n\nclass SearchPagination extends PureComponent<ISearchPaginationProps> {\n  changePage = (page: number) => {\n    const total_pages = Math.ceil(\n      this.props.resultsCount! / this.props.resultsPerPage\n    );\n    page = Math.max(1, Math.min(page, total_pages));\n    this.props.onPageChange(page);\n  };\n\n  render() {\n    const { currentPage, resultsCount, resultsPerPage } = this.props;\n    if (resultsCount) {\n      const totalPages = Math.ceil(resultsCount / resultsPerPage);\n      if (totalPages > 1) {\n        let paginationItems = [];\n\n        for (\n          let pageIdx = Math.max(2, currentPage - PAGINATION_OFFSET);\n          pageIdx <= Math.min(totalPages - 1, currentPage + PAGINATION_OFFSET);\n          pageIdx++\n        ) {\n          if (pageIdx === currentPage - PAGINATION_OFFSET) {\n            paginationItems.push(\n              <Pagination.Ellipsis key=\"ellipsis-before\" disabled />\n            );\n          }\n          paginationItems.push(\n            <Pagination.Item\n              key={pageIdx}\n              active={pageIdx === currentPage}\n              onClick={() => this.changePage(pageIdx)}\n            >\n              {pageIdx}\n            </Pagination.Item>\n          );\n          if (pageIdx === currentPage + PAGINATION_OFFSET) {\n            paginationItems.push(\n              <Pagination.Ellipsis key=\"ellipsis-after\" disabled />\n            );\n          }\n        }\n\n        return (\n          <Pagination size=\"sm\">\n            <Pagination.Prev\n              key=\"prev\"\n              onClick={() => this.changePage(currentPage - 1)}\n            />\n            <Pagination.Item\n              key={1}\n              active={1 === currentPage}\n              onClick={() => this.changePage(1)}\n            >\n              {1}\n            </Pagination.Item>\n            {paginationItems}\n            <Pagination.Item\n              key={totalPages}\n              active={totalPages === currentPage}\n              onClick={() => this.changePage(totalPages)}\n            >\n              {totalPages}\n            </Pagination.Item>\n            <Pagination.Next\n              key=\"next\"\n              onClick={() => this.changePage(currentPage + 1)}\n            />\n          </Pagination>\n        );\n      }\n    }\n\n    return null;\n  }\n}\n\nexport default SearchPagination;\n","import React, { PureComponent } from 'react';\nimport { Button } from 'react-bootstrap';\nimport { FaClipboard, FaCheck } from 'react-icons/fa';\nimport {\n  ICopyToClipboardButtonProps,\n  ICopyToClipboardButtonState,\n} from '../interfaces/ICopyToClipboardButton.interfaces';\n\nconst CLIPBOARD_COPY_NOTIFICATION: number = 1500;\n\nclass CopyToClipboardButton extends PureComponent<\n  ICopyToClipboardButtonProps,\n  ICopyToClipboardButtonState\n> {\n  componentDidUpdate(\n    prevProps: ICopyToClipboardButtonProps,\n    prevState: ICopyToClipboardButtonState\n  ) {\n    if (this.state.copied && this.state.copied !== prevState.copied) {\n      setTimeout(() => {\n        this.setState({ copied: false });\n      }, CLIPBOARD_COPY_NOTIFICATION);\n    }\n  }\n\n  handleClick = (e: React.MouseEvent<HTMLButtonElement>) => {\n    this.props.onClick();\n    this.setState({ copied: true });\n  };\n\n  render() {\n    return (\n      <Button\n        className={this.props.className}\n        variant=\"secondary\"\n        onClick={this.handleClick}\n        disabled={this.state.copied}\n      >\n        {this.state.copied ? (\n          <FaCheck className=\"faIconVerticalAlign\" />\n        ) : (\n          <FaClipboard className=\"faIconVerticalAlign\" />\n        )}\n      </Button>\n    );\n  }\n}\n\nexport default CopyToClipboardButton;\n","import React, { PureComponent } from 'react';\nimport { Card, Container, Row, Col, Form, InputGroup } from 'react-bootstrap';\nimport dayjs from 'dayjs';\nimport localizedFormat from 'dayjs/plugin/localizedFormat';\n\nimport { Img } from 'react-image';\nimport { FaExternalLinkAlt } from 'react-icons/fa';\nimport { GoVerified } from 'react-icons/go';\nimport { ISearchResultProps } from '../interfaces/ISearchResult.interfaces';\nimport CopyToClipboardButton from './CopyToClipboardButton';\n\ndayjs.extend(localizedFormat);\n\nclass SearchResult extends PureComponent<ISearchResultProps> {\n  handleCopyToClipboard = (content: string) => {\n    this.props.onCopyToClipbard(content);\n  };\n\n  private displayHighlight = (content?: string) => {\n    return (\n      content && (\n        <span\n          dangerouslySetInnerHTML={{\n            __html: content,\n          }}\n        />\n      )\n    );\n  };\n\n  render() {\n    const {\n      id,\n      score,\n      name,\n      favicon,\n      highlightedName,\n      highlightedDescription,\n      highlightedLicense,\n      highlightedRepository,\n      highlightedAuthorName,\n      highlightedVersion,\n      metadata,\n      homepage,\n    } = this.props.result;\n\n    return (\n      <Card key={id} className=\"mb-2\">\n        <Card.Header>\n          {favicon && (\n            <Img className=\"mr-2\" src={favicon} width={20} height={20} />\n          )}\n          <strong>{this.displayHighlight(highlightedName)}</strong>\n          {' - '}\n          {this.displayHighlight(highlightedVersion)}\n          {metadata.repositoryOfficial && (\n            <GoVerified className=\"ml-2 faIconVerticalAlign\" color=\"#2E86C1\" />\n          )}\n          {process.env.NODE_ENV === 'development' && ` - @score: ${score}`}\n        </Card.Header>\n        <Card.Body>\n          <Container>\n            {highlightedDescription && (\n              <Row className=\"mb-3\">\n                <Col>{this.displayHighlight(highlightedDescription)}</Col>\n              </Row>\n            )}\n            <small>\n              <Row>\n                <Col lg={6}>\n                  Updated: {dayjs(metadata.committed).format('LLL')}\n                </Col>\n                <Col lg={6}>\n                  License: {this.displayHighlight(highlightedLicense)}\n                </Col>\n              </Row>\n\n              <Row className=\"mb-2\">\n                <Col lg={6}>\n                  Bucket:{' '}\n                  <a href={metadata.repository}>\n                    {this.displayHighlight(highlightedRepository)}\n                  </a>\n                  {metadata.repositoryOfficial && (\n                    <GoVerified className=\"ml-1\" color=\"#2E86C1\" />\n                  )}\n                  {!metadata.repositoryOfficial && (\n                    <CopyToClipboardButton\n                      className=\"ml-1 ms copyToClipbardMiniButton\"\n                      onClick={() =>\n                        this.handleCopyToClipboard(\n                          `scoop bucket add ${metadata.repository\n                            .split('/')\n                            .pop()} ${metadata.repository}`\n                        )\n                      }\n                    />\n                  )}\n                </Col>\n                <Col lg={6}>\n                  Commiter: {this.displayHighlight(highlightedAuthorName)}\n                </Col>\n              </Row>\n              <Row className=\"text-center\" noGutters>\n                <Col lg xs={4} className=\"mt-1 mb-2\">\n                  <a href={homepage}>\n                    Homepage <FaExternalLinkAlt />\n                  </a>\n                </Col>\n                <Col lg xs={4} className=\"mt-1 mb-2\">\n                  <a\n                    href={`${metadata.repository}/blob/master/${metadata.filePath}`}\n                  >\n                    Manifest <FaExternalLinkAlt />\n                  </a>\n                </Col>\n                <Col lg xs={4} className=\"mt-1 mb-2\">\n                  <a href={`${metadata.repository}/commit/${metadata.sha}`}>\n                    Commit <FaExternalLinkAlt />\n                  </a>\n                </Col>\n                <Col lg={5}>\n                  <InputGroup size=\"sm\">\n                    <InputGroup.Prepend>\n                      <InputGroup.Text className=\"prompt border-right-0\">\n                        &gt;\n                      </InputGroup.Text>\n                    </InputGroup.Prepend>\n                    <Form.Control\n                      className=\"border-left-0\"\n                      readOnly\n                      type=\"text\"\n                      value={`scoop install ${name}`}\n                    />\n\n                    <InputGroup.Append>\n                      <CopyToClipboardButton\n                        onClick={() =>\n                          this.handleCopyToClipboard(`scoop install ${name}`)\n                        }\n                      />\n                    </InputGroup.Append>\n                  </InputGroup>\n                </Col>\n              </Row>\n            </small>\n          </Container>\n        </Card.Body>\n      </Card>\n    );\n  }\n}\n\nexport default SearchResult;\n","import React, { PureComponent } from 'react';\nimport { ICopyToClipboardHandlerProps } from '../interfaces/ICopyToClipboardHandler.interfaces';\n\nclass CopyToClipboardHandler extends PureComponent<\n  ICopyToClipboardHandlerProps\n> {\n  private textAreaRef = React.createRef<HTMLTextAreaElement>();\n\n  componentDidUpdate() {\n    if (this.props.content) {\n      const textArea = this.textAreaRef.current!;\n\n      textArea.value = this.props.content;\n      textArea.select();\n      document.execCommand('copy');\n      textArea.blur();\n\n      this.props.onContentCopied();\n    }\n  }\n\n  render() {\n    return (\n      <textarea\n        ref={this.textAreaRef}\n        readOnly\n        style={{ position: 'absolute', left: -9999 }}\n      />\n    );\n  }\n}\n\nexport default CopyToClipboardHandler;\n","import React, { PureComponent } from 'react';\nimport { IAppState } from './interfaces/IApp.interfaces';\nimport './App.css';\n\nimport { Container, Row, Col } from 'react-bootstrap';\nimport NavBar from './components/NavBar';\nimport SearchBar from './components/SearchBar';\nimport SearchProcessor from './components/SearchProcessor';\nimport SearchPagination from './components/SearchPagination';\nimport SearchResult from './components/SearchResult';\nimport { SearchResultsJson } from './serialization/SearchResultsJson';\nimport { ManifestJson } from './serialization/ManifestJson';\nimport CopyToClipboardHandler from './components/CopyToClipboardHandler';\n\nconst RESULTS_PER_PAGE: number = 20;\n\nclass App extends PureComponent<{}, IAppState> {\n  constructor(props: {}) {\n    super(props);\n\n    const query = sessionStorage.getItem('query') || '';\n    const currentPage = parseInt(sessionStorage.getItem('currentPage') || '1');\n    const sortIndex = parseInt(sessionStorage.getItem('sortIndex') || '0');\n    this.state = {\n      query: query,\n      currentPage: currentPage,\n      sortIndex: sortIndex,\n    };\n  }\n\n  handleQueryChange = (query: string) => {\n    sessionStorage.setItem('query', query);\n    this.setState({ query, currentPage: 1 });\n  };\n\n  handleResultsChange = (e?: SearchResultsJson) => {\n    this.setState({ searchResults: e });\n  };\n\n  handlePageChange = (newPage: number) => {\n    sessionStorage.setItem('currentPage', newPage.toString());\n    this.setState({ currentPage: newPage });\n  };\n\n  handleSortChange = (sortIndex: number) => {\n    sessionStorage.setItem('sortIndex', sortIndex.toString());\n    this.setState({ sortIndex: sortIndex });\n  };\n\n  handleCopyToClipboard = (content: string) => {\n    this.setState({ contentToCopy: content });\n  };\n\n  handleContentCopied = () => {\n    this.setState({ contentToCopy: undefined });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <NavBar />\n\n        <CopyToClipboardHandler\n          content={this.state.contentToCopy}\n          onContentCopied={this.handleContentCopied}\n        />\n\n        <Container className=\"mt-5 mb-5\">\n          <Row className=\"justify-content-center\">\n            <Col sm={8}>\n              <SearchBar\n                query={this.state.query}\n                onQueryChange={this.handleQueryChange}\n              />\n            </Col>\n          </Row>\n\n          <Row className=\"mt-5 mb-1\">\n            <Col>\n              <SearchProcessor\n                resultsPerPage={RESULTS_PER_PAGE}\n                page={this.state.currentPage}\n                query={this.state.query}\n                sortIndex={this.state.sortIndex}\n                onResultsChange={this.handleResultsChange}\n                onSortIndexChange={this.handleSortChange}\n              />\n            </Col>\n          </Row>\n          <Row>\n            <Col className=\"d-flex justify-content-center\">\n              <SearchPagination\n                resultsPerPage={RESULTS_PER_PAGE}\n                currentPage={this.state.currentPage}\n                resultsCount={this.state.searchResults?.count}\n                onPageChange={this.handlePageChange}\n              />\n            </Col>\n          </Row>\n\n          <Row className=\"mt-2\">\n            <Col>\n              {this.state.searchResults?.results.map(\n                (searchResult: ManifestJson) => (\n                  <SearchResult\n                    key={searchResult.id}\n                    result={searchResult}\n                    onCopyToClipbard={this.handleCopyToClipboard}\n                  />\n                )\n              )}\n            </Col>\n          </Row>\n\n          <Row>\n            <Col className=\"d-flex justify-content-center\">\n              <SearchPagination\n                resultsPerPage={RESULTS_PER_PAGE}\n                currentPage={this.state.currentPage}\n                resultsCount={this.state.searchResults?.count}\n                onPageChange={this.handlePageChange}\n              />\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}