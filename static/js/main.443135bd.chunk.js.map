{"version":3,"sources":["components/NavBar.tsx","components/SearchBar.tsx","components/SearchStatus.tsx","serialization/DateConverter.ts","serialization/MetadataJson.ts","serialization/ManifestJson.ts","serialization/SearchResultsJson.ts","components/SearchProcessor.tsx","components/SearchPagination.tsx","components/SearchResult.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["NavBar","Navbar","expand","bg","variant","Brand","href","Toggle","aria-controls","Collapse","id","Nav","className","Link","size","PureComponent","SearchBar","props","searchInput","delayBeforeSearch","handleChange","e","setState","query","target","value","clearDelayBeforeSearchTimeout","setTimeout","onQueryChange","handleSubmit","preventDefault","state","React","createRef","this","current","focus","clearTimeout","undefined","Form","onSubmit","InputGroup","Prepend","Text","Control","ref","type","placeholder","onChange","defaultProps","SearchStatus","searching","Spinner","animation","resultsCount","DateConverter","JsonConverter","date","Error","Date","MetadataJson","JsonObject","JsonProperty","String","Boolean","ManifestJson","Number","Any","propertyName","fallback","_highlights","tryGetHighlight","name","license","metadata","repository","replace","authorName","description","version","homepage","parser","document","createElement","origin","SearchResultsJson","jsonObject","jsonConvert","deserializeObject","JsonConvert","Array","SearchProcessor","abortController","AbortController","sortModes","DisplayName","OrderBy","handleSortChange","onSortIndexChange","selectedIndex","fetchDataAsync","signal","prevProps","prevState","page","sortIndex","abort","abortSignal","url","process","search","trim","split","map","word","join","fetch","method","body","JSON","stringify","count","orderby","skip","resultsPerPage","top","select","highlight","highlightPreTag","highlightPostTag","headers","then","response","ok","status","statusText","json","data","results","Create","onResultsChange","catch","error","console","Row","Col","lg","as","custom","item","idx","key","SearchPagination","changePage","total_pages","Math","ceil","max","min","onPageChange","currentPage","totalPages","paginationItems","pageIdx","push","Pagination","Ellipsis","disabled","Item","active","onClick","Prev","Next","SearchResult","commandInput","handleCopyClick","input","execCommand","selectionEnd","selectionStart","blur","copied","displayHighlight","content","dangerouslySetInnerHTML","__html","result","score","favicon","highlightedName","highlightedDescription","highlightedLicense","highlightedRepository","highlightedAuthorName","highlightedVersion","Card","Header","src","width","height","repositoryOfficial","color","Body","Container","moment","committed","calendar","noGutters","xs","filePath","sha","readOnly","queryCommandSupported","Append","Button","Component","App","handleQueryChange","sessionStorage","setItem","handleResultsChange","searchResults","handlePageChange","newPage","toString","ReactGA","initialize","getItem","parseInt","sm","searchResult","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.443135bd.chunk.js","sourcesContent":["import React, { PureComponent } from 'react';\nimport { Navbar, Nav } from 'react-bootstrap';\nimport { FaGithub } from 'react-icons/fa';\n\nclass NavBar extends PureComponent {\n  render() {\n    return (\n      <Navbar expand=\"sm\" bg=\"dark\" variant=\"dark\">\n        <Navbar.Brand href=\"#home\">ScoopSearch</Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n        <Navbar.Collapse id=\"responsive-navbar-nav\">\n          <Nav className=\"mr-auto\">\n            <Nav.Link href=\"#apps\">Apps</Nav.Link>\n            <Nav.Link href=\"#buckets\">Buckets</Nav.Link>\n          </Nav>\n          <Nav>\n            <Nav.Link href=\"https://github.com/ScoopSearch\">\n              <FaGithub size=\"1.2em\" />\n            </Nav.Link>\n          </Nav>\n        </Navbar.Collapse>\n      </Navbar>\n    );\n  }\n}\n\nexport default NavBar;\n","import React, { PureComponent } from 'react';\nimport {\n  ISearchBarProps,\n  ISearchBarState,\n} from '../interfaces/ISearchBar.interfaces';\nimport { Form, InputGroup } from 'react-bootstrap';\nimport { FaSearch } from 'react-icons/fa';\n\nconst DELAY_SEARCH_AFTER_KEYPRESS: number = 250;\n\nclass SearchBar extends PureComponent<ISearchBarProps, ISearchBarState> {\n  static defaultProps = {\n    query: '',\n  };\n\n  searchInput: React.RefObject<HTMLInputElement>;\n  delayBeforeSearch?: NodeJS.Timeout;\n\n  constructor(props: ISearchBarProps) {\n    super(props);\n    this.searchInput = React.createRef<HTMLInputElement>();\n\n    this.state = {\n      query: this.props.query,\n    };\n  }\n\n  componentDidMount() {\n    this.searchInput.current!.focus();\n  }\n\n  componentWillUnmount() {\n    this.clearDelayBeforeSearchTimeout();\n  }\n\n  handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ query: e.target.value });\n\n    this.clearDelayBeforeSearchTimeout();\n\n    this.delayBeforeSearch = setTimeout(\n      (query) => this.props.onQueryChange(query),\n      DELAY_SEARCH_AFTER_KEYPRESS,\n      e.target.value\n    );\n  };\n\n  handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    this.props.onQueryChange(this.state.query);\n  };\n\n  clearDelayBeforeSearchTimeout() {\n    if (this.delayBeforeSearch) {\n      clearTimeout(this.delayBeforeSearch);\n      this.delayBeforeSearch = undefined;\n    }\n  }\n\n  render() {\n    return (\n      <Form onSubmit={this.handleSubmit}>\n        <InputGroup>\n          <InputGroup.Prepend>\n            <InputGroup.Text>\n              <FaSearch />\n            </InputGroup.Text>\n          </InputGroup.Prepend>\n          <Form.Control\n            ref={this.searchInput}\n            size=\"lg\"\n            type=\"text\"\n            placeholder=\"Search an app\"\n            value={this.state.query}\n            onChange={this.handleChange}\n          />\n        </InputGroup>\n      </Form>\n    );\n  }\n}\n\nexport default SearchBar;\n","import React, { PureComponent } from 'react';\nimport { Spinner } from 'react-bootstrap';\nimport { ISearchStatusProps } from '../interfaces/ISearchStatus.interfaces';\n\nclass SearchStatus extends PureComponent<ISearchStatusProps> {\n  render() {\n    if (this.props.searching) {\n      return (\n        <span>\n          <span>Searching for matching applications...</span>{' '}\n          <Spinner animation=\"border\" size=\"sm\" variant=\"secondary\" />\n        </span>\n      );\n    } else if (this.props.resultsCount) {\n      return (\n        <span>\n          Found {this.props.resultsCount} applications\n          {this.props.query && (\n            <span>\n              {' '}\n              for '<strong>{this.props.query}</strong>'\n            </span>\n          )}\n          .\n        </span>\n      );\n    } else {\n      return (\n        <span>\n          No result found for '<strong>{this.props.query}</strong>'\n        </span>\n      );\n    }\n  }\n}\n\nexport default SearchStatus;\n","import { JsonConverter, JsonCustomConvert } from 'json2typescript';\n\n@JsonConverter\nexport class DateConverter implements JsonCustomConvert<Date> {\n  serialize(date: Date): any {\n    throw new Error('Conversion not supported');\n  }\n  deserialize(date: any): Date {\n    return new Date(date);\n  }\n}\n","import { JsonObject, JsonProperty } from 'json2typescript';\nimport { DateConverter } from './DateConverter';\n\n@JsonObject('MetadataJson')\nexport class MetadataJson {\n  @JsonProperty('Repository', String)\n  repository: string = '';\n\n  @JsonProperty('OfficialRepository', Boolean)\n  repositoryOfficial: boolean = false;\n\n  @JsonProperty('BranchName', String, true)\n  branchName?: string = '';\n\n  @JsonProperty('FilePath', String)\n  filePath: string = '';\n\n  @JsonProperty('AuthorName', String)\n  authorName: string = '';\n\n  @JsonProperty('Committed', DateConverter)\n  committed: Date = new Date();\n\n  @JsonProperty('Sha', String)\n  sha: string = '';\n}\n","import { JsonObject, JsonProperty, Any } from 'json2typescript';\nimport { MetadataJson } from './MetadataJson';\n\n@JsonObject('ManifestJson')\nexport class ManifestJson {\n  @JsonProperty('Id', String)\n  id: string = '';\n\n  @JsonProperty('@search.score', Number)\n  score: number = 0;\n\n  @JsonProperty('Name', String)\n  name: string = '';\n\n  @JsonProperty('Description', String, true)\n  description?: string = undefined;\n\n  @JsonProperty('Homepage', String, true)\n  homepage?: string = undefined;\n\n  @JsonProperty('License', String, true)\n  license?: string = undefined;\n\n  @JsonProperty('Version', String, true)\n  version: string = '';\n\n  @JsonProperty('Metadata', MetadataJson)\n  metadata: MetadataJson = new MetadataJson();\n\n  @JsonProperty('@search.highlights', Any, true)\n  private _highlights: any = undefined;\n\n  get highlightedName() {\n    return this.tryGetHighlight('Name', this.name);\n  }\n\n  get highlightedLicense() {\n    return this.tryGetHighlight('License', this.license);\n  }\n\n  get highlightedRepository() {\n    return this.tryGetHighlight(\n      'Metadata/Repository',\n      this.metadata.repository.replace('https://github.com/', '')\n    );\n  }\n\n  get highlightedAuthorName() {\n    return this.tryGetHighlight(\n      'Metadata/AuthorName',\n      this.metadata.authorName\n    );\n  }\n\n  get highlightedDescription() {\n    return this.tryGetHighlight('Description', this.description);\n  }\n\n  get highlightedVersion() {\n    return this.tryGetHighlight('Version', this.version);\n  }\n\n  tryGetHighlight(propertyName: string, fallback?: string) {\n    return this._highlights && this._highlights[propertyName]\n      ? this._highlights[propertyName][0]\n      : fallback;\n  }\n\n  get favicon() {\n    if (this.homepage) {\n      var parser = document.createElement('a');\n      parser.href = this.homepage;\n\n      return parser.origin + '/favicon.ico';\n    }\n\n    return undefined;\n  }\n}\n","import { JsonObject, JsonConvert, JsonProperty } from 'json2typescript';\nimport { ManifestJson } from './ManifestJson';\n\n@JsonObject('SearchResultsJson')\nexport class SearchResultsJson {\n  private static jsonConvert = new JsonConvert();\n\n  static Create(jsonObject: any) {\n    return SearchResultsJson.jsonConvert.deserializeObject(\n      jsonObject,\n      SearchResultsJson\n    );\n  }\n\n  @JsonProperty('@odata.count', Number)\n  count: number = 0;\n\n  @JsonProperty('value', [ManifestJson])\n  results: ManifestJson[] = Array<ManifestJson>();\n}\n","import React, { PureComponent } from 'react';\nimport {\n  ISearchProcessorProps,\n  ISearchProcessorState,\n} from '../interfaces/ISearchProcessor.interfaces';\n\nimport { Col, Row, Form, InputGroup } from 'react-bootstrap';\nimport SearchStatus from './SearchStatus';\nimport { SearchResultsJson } from '../serialization/SearchResultsJson';\n\nclass SearchProcessor extends PureComponent<\n  ISearchProcessorProps,\n  ISearchProcessorState\n> {\n  private abortController: AbortController = new AbortController();\n\n  private sortModes: ISortMode[] = [\n    {\n      DisplayName: 'Best match',\n      OrderBy: [\n        'search.score() desc',\n        'Metadata/OfficialRepositoryNumber desc',\n        'NameNormalized asc',\n      ],\n    },\n    {\n      DisplayName: 'Name',\n      OrderBy: [\n        'NameNormalized asc',\n        'Metadata/OfficialRepositoryNumber desc',\n        'Metadata/RepositoryStars desc',\n        'Metadata/Committed desc',\n      ],\n    },\n    {\n      DisplayName: 'Newest',\n      OrderBy: [\n        'Metadata/Committed desc',\n        'Metadata/OfficialRepositoryNumber desc',\n        'Metadata/RepositoryStars desc',\n      ],\n    },\n  ];\n\n  constructor(props: ISearchProcessorProps) {\n    super(props);\n\n    this.state = {\n      resultsCount: undefined,\n      searching: false,\n    };\n  }\n\n  componentDidMount() {\n    this.fetchDataAsync(this.abortController.signal, this.props.query);\n  }\n\n  componentDidUpdate(\n    prevProps: ISearchProcessorProps,\n    prevState: ISearchProcessorState\n  ) {\n    if (\n      this.props.query !== prevProps.query ||\n      this.props.page !== prevProps.page ||\n      this.props.sortIndex !== prevProps.sortIndex\n    ) {\n      this.abortController.abort();\n      this.abortController = new AbortController();\n      this.fetchDataAsync(this.abortController.signal, this.props.query);\n    }\n  }\n\n  componentWillUnmount() {\n    this.abortController.abort();\n  }\n\n  handleSortChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    this.props.onSortIndexChange(e.target.selectedIndex);\n  };\n\n  fetchDataAsync(abortSignal: AbortSignal, query: string) {\n    this.setState({\n      searching: true,\n    });\n\n    const url = `${process.env.REACT_APP_AZURESEARCH_URL}/search?api-version=2020-06-30`;\n    const search = query\n      .trim()\n      .split(' ')\n      .map((word) => `${word}*`)\n      .join(' ');\n\n    fetch(url, {\n      method: 'POST',\n      body: JSON.stringify({\n        count: true,\n        search: search,\n        orderby: this.sortModes[this.props.sortIndex].OrderBy.join(', '),\n        skip: (this.props.page - 1) * this.props.resultsPerPage,\n        top: this.props.resultsPerPage,\n        select: [\n          'Id',\n          'Name',\n          'Description',\n          'Homepage',\n          'License',\n          'Version',\n          'Metadata/Repository',\n          'Metadata/FilePath',\n          'Metadata/AuthorName',\n          'Metadata/OfficialRepository',\n          'Metadata/Committed',\n          'Metadata/Sha',\n        ].join(','),\n        highlight: [\n          'Name',\n          'Description',\n          'Version',\n          'License',\n          'Metadata/Repository',\n          'Metadata/AuthorName',\n        ].join(','),\n        highlightPreTag: '<mark>',\n        highlightPostTag: '</mark>',\n      }),\n      headers: {\n        'api-key': process.env.REACT_APP_AZURESEARCH_KEY!,\n        'Content-Type': 'application/json',\n      },\n      signal: abortSignal,\n    })\n      .then((response) => {\n        if (!response.ok) {\n          throw new Error(`${response.status} ${response.statusText}`);\n        }\n\n        return response.json();\n      })\n      .then((data) => {\n        const results = SearchResultsJson.Create(data);\n\n        this.setState({\n          searching: false,\n          resultsCount: results.count,\n        });\n        this.props.onResultsChange(results);\n      })\n      .catch((error: Error) => {\n        if (error.name !== 'AbortError') {\n          this.setState({\n            searching: false,\n            resultsCount: undefined,\n          });\n          this.props.onResultsChange(undefined);\n          console.error(error);\n        }\n      });\n  }\n\n  render() {\n    return (\n      <Form>\n        <Row>\n          <Col className=\"my-auto\">\n            <SearchStatus\n              query={this.props.query}\n              resultsCount={this.state.resultsCount!}\n              searching={this.state.searching!}\n            />\n          </Col>\n          <Col lg={3}>\n            <InputGroup size=\"sm\">\n              <InputGroup.Prepend>\n                <InputGroup.Text>Sort by</InputGroup.Text>\n              </InputGroup.Prepend>\n              <Form.Control\n                as=\"select\"\n                size=\"sm\"\n                custom\n                value={this.props.sortIndex}\n                onChange={this.handleSortChange}\n              >\n                {this.sortModes.map((item, idx) => (\n                  <option key={idx} value={idx}>\n                    {item.DisplayName}\n                  </option>\n                ))}\n              </Form.Control>\n            </InputGroup>\n          </Col>\n        </Row>\n      </Form>\n    );\n  }\n}\n\ninterface ISortMode {\n  DisplayName: string;\n  OrderBy: string[];\n}\n\nexport default SearchProcessor;\n","import React, { PureComponent } from 'react';\nimport { ISearchPaginationProps } from '../interfaces/ISearchPagination.interfaces';\n\nimport { Pagination } from 'react-bootstrap';\n\nconst PAGINATION_OFFSET: number = 2;\n\nclass SearchPagination extends PureComponent<ISearchPaginationProps> {\n  changePage = (page: number) => {\n    const total_pages = Math.ceil(\n      this.props.resultsCount! / this.props.resultsPerPage\n    );\n    page = Math.max(1, Math.min(page, total_pages));\n    this.props.onPageChange(page);\n  };\n\n  render() {\n    const { currentPage, resultsCount, resultsPerPage } = this.props;\n    if (resultsCount) {\n      const totalPages = Math.ceil(resultsCount / resultsPerPage);\n      if (totalPages > 1) {\n        let paginationItems = [];\n\n        for (\n          let pageIdx = Math.max(2, currentPage - PAGINATION_OFFSET);\n          pageIdx <= Math.min(totalPages - 1, currentPage + PAGINATION_OFFSET);\n          pageIdx++\n        ) {\n          if (pageIdx === currentPage - PAGINATION_OFFSET) {\n            paginationItems.push(\n              <Pagination.Ellipsis key=\"ellipsis-before\" disabled />\n            );\n          }\n          paginationItems.push(\n            <Pagination.Item\n              key={pageIdx}\n              active={pageIdx === currentPage}\n              onClick={() => this.changePage(pageIdx)}\n            >\n              {pageIdx}\n            </Pagination.Item>\n          );\n          if (pageIdx === currentPage + PAGINATION_OFFSET) {\n            paginationItems.push(\n              <Pagination.Ellipsis key=\"ellipsis-after\" disabled />\n            );\n          }\n        }\n\n        return (\n          <Pagination size=\"sm\">\n            <Pagination.Prev\n              key=\"prev\"\n              onClick={() => this.changePage(currentPage - 1)}\n            />\n            <Pagination.Item\n              key={1}\n              active={1 === currentPage}\n              onClick={() => this.changePage(1)}\n            >\n              {1}\n            </Pagination.Item>\n            {paginationItems}\n            <Pagination.Item\n              key={totalPages}\n              active={totalPages === currentPage}\n              onClick={() => this.changePage(totalPages)}\n            >\n              {totalPages}\n            </Pagination.Item>\n            <Pagination.Next\n              key=\"next\"\n              onClick={() => this.changePage(currentPage + 1)}\n            />\n          </Pagination>\n        );\n      }\n    }\n\n    return null;\n  }\n}\n\nexport default SearchPagination;\n","import React, { Component } from 'react';\nimport {\n  Card,\n  Container,\n  Row,\n  Col,\n  Form,\n  InputGroup,\n  Button,\n} from 'react-bootstrap';\nimport moment from 'moment';\nimport { Img } from 'react-image';\nimport { FaExternalLinkAlt, FaClipboard, FaCheck } from 'react-icons/fa';\nimport { GoVerified } from 'react-icons/go';\nimport {\n  ISearchResultProps,\n  ISearchResultState,\n} from '../interfaces/ISearchResult.interfaces';\n\nconst CLIPBOARD_COPY_NOTIFICATION: number = 500;\n\nclass SearchResult extends Component<ISearchResultProps, ISearchResultState> {\n  commandInput: React.RefObject<HTMLInputElement>;\n\n  constructor(props: ISearchResultProps) {\n    super(props);\n\n    this.state = { copied: false };\n\n    this.commandInput = React.createRef<HTMLInputElement>();\n  }\n\n  componentDidUpdate(\n    prevProps: ISearchResultProps,\n    prevState: ISearchResultState\n  ) {\n    if (this.state.copied && this.state.copied !== prevState.copied) {\n      setTimeout(() => {\n        this.setState({ copied: false });\n      }, CLIPBOARD_COPY_NOTIFICATION);\n    }\n  }\n\n  handleCopyClick = (e: React.MouseEvent<HTMLButtonElement>) => {\n    const input = this.commandInput.current!;\n    input.select();\n    document.execCommand('copy');\n    input.selectionEnd = input.selectionStart;\n    input.blur();\n\n    this.setState({ copied: true });\n  };\n\n  private displayHighlight = (content?: string) => {\n    return (\n      content && (\n        <span\n          dangerouslySetInnerHTML={{\n            __html: content,\n          }}\n        />\n      )\n    );\n  };\n\n  render() {\n    const {\n      id,\n      score,\n      name,\n      favicon,\n      highlightedName,\n      highlightedDescription,\n      highlightedLicense,\n      highlightedRepository,\n      highlightedAuthorName,\n      highlightedVersion,\n      metadata,\n      homepage,\n    } = this.props.result;\n\n    return (\n      <Card key={id} className=\"mb-2\">\n        <Card.Header>\n          {favicon && (\n            <Img className=\"mr-2\" src={favicon} width={20} height={20} />\n          )}\n          <strong>{this.displayHighlight(highlightedName)}</strong>\n          {' - '}\n          {this.displayHighlight(highlightedVersion)}\n          {metadata.repositoryOfficial && (\n            <GoVerified className=\"ml-2 faIconVerticalAlign\" color=\"#2E86C1\" />\n          )}\n          {process.env.NODE_ENV === 'development' && ` - @score: ${score}`}\n        </Card.Header>\n        <Card.Body>\n          <Container>\n            {highlightedDescription && (\n              <Row className=\"mb-3\">\n                <Col>{this.displayHighlight(highlightedDescription)}</Col>\n              </Row>\n            )}\n            <small>\n              <Row>\n                <Col lg={6}>\n                  Updated: {moment(metadata.committed).calendar()}\n                </Col>\n                <Col lg={6}>\n                  License: {this.displayHighlight(highlightedLicense)}\n                </Col>\n              </Row>\n\n              <Row className=\"mb-2\">\n                <Col lg={6}>\n                  Bucket:{' '}\n                  <a href={metadata.repository}>\n                    {this.displayHighlight(highlightedRepository)}\n                  </a>\n                  {metadata.repositoryOfficial && (\n                    <GoVerified className=\"ml-1\" color=\"#2E86C1\" />\n                  )}\n                </Col>\n                <Col lg={6}>\n                  Commiter: {this.displayHighlight(highlightedAuthorName)}\n                </Col>\n              </Row>\n              <Row className=\"text-center\" noGutters>\n                <Col lg xs={4} className=\"mt-1 mb-2\">\n                  <a href={homepage}>\n                    Homepage <FaExternalLinkAlt />\n                  </a>\n                </Col>\n                <Col lg xs={4} className=\"mt-1 mb-2\">\n                  <a\n                    href={`${metadata.repository}/blob/master/${metadata.filePath}`}\n                  >\n                    Manifest <FaExternalLinkAlt />\n                  </a>\n                </Col>\n                <Col lg xs={4} className=\"mt-1 mb-2\">\n                  <a href={`${metadata.repository}/commit/${metadata.sha}`}>\n                    Commit <FaExternalLinkAlt />\n                  </a>\n                </Col>\n                <Col lg={5}>\n                  <InputGroup size=\"sm\">\n                    <InputGroup.Prepend>\n                      <InputGroup.Text className=\"prompt border-right-0\">\n                        &gt;\n                      </InputGroup.Text>\n                    </InputGroup.Prepend>\n                    <Form.Control\n                      ref={this.commandInput}\n                      className=\"border-left-0\"\n                      readOnly\n                      type=\"text\"\n                      value={`scoop install ${name}`}\n                    />\n                    {document.queryCommandSupported('copy') && (\n                      <InputGroup.Append>\n                        <Button\n                          variant=\"secondary\"\n                          onClick={this.handleCopyClick}\n                          disabled={this.state.copied}\n                        >\n                          {this.state.copied ? (\n                            <FaCheck className=\"faIconVerticalAlign\" />\n                          ) : (\n                            <FaClipboard className=\"faIconVerticalAlign\" />\n                          )}\n                        </Button>\n                      </InputGroup.Append>\n                    )}\n                  </InputGroup>\n                </Col>\n              </Row>\n            </small>\n          </Container>\n        </Card.Body>\n      </Card>\n    );\n  }\n}\n\nexport default SearchResult;\n","import React, { Component } from 'react';\nimport ReactGA from 'react-ga';\nimport { IAppState } from './interfaces/IApp.interfaces';\nimport './App.css';\n\nimport NavBar from './components/NavBar';\nimport SearchBar from './components/SearchBar';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport SearchProcessor from './components/SearchProcessor';\nimport SearchPagination from './components/SearchPagination';\nimport SearchResult from './components/SearchResult';\nimport { SearchResultsJson } from './serialization/SearchResultsJson';\nimport { ManifestJson } from './serialization/ManifestJson';\n\nconst RESULTS_PER_PAGE: number = 20;\nconst GA_ID: string = 'UA-171643529-1';\n\nclass App extends Component<{}, IAppState> {\n  constructor(props: {}) {\n    super(props);\n\n    ReactGA.initialize(GA_ID);\n\n    const query = sessionStorage.getItem('query') || '';\n    const currentPage = parseInt(sessionStorage.getItem('currentPage') || '1');\n    const sortIndex = parseInt(sessionStorage.getItem('sortIndex') || '0');\n    this.state = {\n      query: query,\n      currentPage: currentPage,\n      sortIndex: sortIndex,\n    };\n  }\n\n  handleQueryChange = (query: string) => {\n    sessionStorage.setItem('query', query);\n    this.setState({ query, currentPage: 1 });\n  };\n\n  handleResultsChange = (e?: SearchResultsJson) => {\n    this.setState({ searchResults: e });\n  };\n\n  handlePageChange = (newPage: number) => {\n    sessionStorage.setItem('currentPage', newPage.toString());\n    this.setState({ currentPage: newPage });\n  };\n\n  handleSortChange = (sortIndex: number) => {\n    sessionStorage.setItem('sortIndex', sortIndex.toString());\n    this.setState({ sortIndex: sortIndex });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <NavBar />\n\n        <Container className=\"mt-5 mb-5\">\n          <Row className=\"justify-content-center\">\n            <Col sm={8}>\n              <SearchBar\n                query={this.state.query}\n                onQueryChange={this.handleQueryChange}\n              />\n            </Col>\n          </Row>\n\n          <Row className=\"mt-5 mb-1\">\n            <Col>\n              <SearchProcessor\n                resultsPerPage={RESULTS_PER_PAGE}\n                page={this.state.currentPage}\n                query={this.state.query}\n                sortIndex={this.state.sortIndex}\n                onResultsChange={this.handleResultsChange}\n                onSortIndexChange={this.handleSortChange}\n              />\n            </Col>\n          </Row>\n          <Row>\n            <Col className=\"d-flex justify-content-center\">\n              <SearchPagination\n                resultsPerPage={RESULTS_PER_PAGE}\n                currentPage={this.state.currentPage}\n                resultsCount={this.state.searchResults?.count}\n                onPageChange={this.handlePageChange}\n              />\n            </Col>\n          </Row>\n\n          <Row className=\"mt-2\">\n            <Col>\n              {this.state.searchResults?.results.map(\n                (searchResult: ManifestJson) => (\n                  <SearchResult key={searchResult.id} result={searchResult} />\n                )\n              )}\n            </Col>\n          </Row>\n\n          <Row>\n            <Col className=\"d-flex justify-content-center\">\n              <SearchPagination\n                resultsPerPage={RESULTS_PER_PAGE}\n                currentPage={this.state.currentPage}\n                resultsCount={this.state.searchResults?.count}\n                onPageChange={this.handlePageChange}\n              />\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}