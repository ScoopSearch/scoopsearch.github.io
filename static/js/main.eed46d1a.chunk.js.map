{"version":3,"sources":["serialization/BucketsResultsJson.ts","utils.ts","components/SearchStatus.tsx","components/KnownBucketIcon.tsx","components/Buckets.tsx","components/NavBar.tsx","components/CopyToClipboardHandler.tsx","components/SearchBar.tsx","components/SearchPagination.tsx","serialization/DateConverter.ts","serialization/MetadataJson.ts","serialization/ManifestJson.ts","serialization/SearchResultsJson.ts","components/SearchProcessor.tsx","components/CopyToClipboardButton.tsx","components/StarsBadge.tsx","components/SearchResult.tsx","components/Search.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["BucketsResultsJson","JsonObject","JsonProperty","Number","jsonObject","jsonConvert","deserializeObject","JsonConvert","Utils","extractPathFromUrl","url","separator","split","slice","join","SearchStatusType","KnownBucketIcon","OverlayTrigger","placement","delay","overlay","Tooltip","id","className","color","PureComponent","SearchStatusTypeMap","Applications","Buckets","SearchStatus","this","props","searching","resultsCount","query","type","typeDescription","Spinner","animation","size","variant","formattedQuery","abortController","AbortController","sortModes","handleSortChange","e","results","state","sortOrder","target","selectedIndex","setState","sortIndex","sortResults","fetchDataAsync","signal","officialBuckets","communityBuckets","map","item","bucket","value","manifests","count","official","concat","abort","abortSignal","officialRepository","process","REACT_APP_AZURESEARCH_URL","REACT_APP_AZURESEARCH_KEY","Error","fetch","method","body","JSON","stringify","facets","filter","top","headers","response","json","data","Create","sort","x","y","localeCompare","Container","Row","Col","length","lg","InputGroup","Prepend","Text","Form","Control","as","custom","onChange","idx","key","Table","striped","bordered","hover","to","pathname","search","encodeURIComponent","NavBar","Navbar","expand","bg","Brand","Link","Toggle","aria-controls","Collapse","Nav","href","CopyToClipboardHandler","textAreaRef","React","createRef","content","onContentCopied","textArea","current","select","document","execCommand","blur","ref","readOnly","style","position","left","SearchBar","searchInput","delayBeforeSubmit","handleChange","onQueryChange","onSubmit","clearDelayBeforeSubmitTimeout","setTimeout","handleSubmit","preventDefault","focus","clearTimeout","undefined","placeholder","SearchPagination","changePage","page","resultsPerPage","onPageChange","totalPages","Math","ceil","max","min","currentPage","paginationItems","minPage","maxPage","maxPageOffset","PAGINATION_OFFSET","minPageOffset","pageIdx","push","Pagination","Ellipsis","disabled","Item","active","onClick","Prev","Next","DateConverter","JsonConverter","date","Date","MetadataJson","String","Boolean","ManifestJson","Any","propertyName","fallback","tryGetHighlights","propertyNames","match","find","highlights","name","tryGetHighlight","license","metadata","repository","replace","authorName","description","version","homepage","parser","createElement","origin","SearchResultsJson","Array","SearchProcessor","DisplayName","OrderBy","onSortIndexChange","prevProps","prevState","onResultsChange","trim","searchMode","orderby","skip","highlight","highlightPreTag","highlightPostTag","then","ok","status","statusText","catch","error","CopyToClipboardButton","handleClick","copied","Button","StarsBadge","stars","Badge","dayjs","extend","localizedFormat","SearchResult","handleCopyToClipboard","onCopyToClipbard","displayHighlight","dangerouslySetInnerHTML","__html","result","score","favicon","highlightedName","highlightedDescription","highlightedLicense","highlightedRepository","highlightedAuthorName","highlightedVersion","Card","Header","src","width","height","repositoryOfficial","Body","committed","format","noGutters","xs","filePath","sha","Append","Search","getQueryFromUri","location","decodeURIComponent","substr","getCurrentPageFromUri","parseInt","params","updateHistory","history","handleQueryChange","searchBarQuery","handleQuerySubmit","handleResultsChange","searchResults","handlePageChange","newPage","sessionStorage","setItem","toString","contentToCopy","handleContentCopied","getItem","queryfromUri","sm","searchResult","App","path","component","window","hostname","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"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","file":"static/js/main.eed46d1a.chunk.js","sourcesContent":["import { JsonObject, JsonConvert, JsonProperty } from 'json2typescript';\n\nimport BucketsResultsFacetJson from './BucketsResultsFacetJson';\n\n@JsonObject('BucketsResultsJson')\nclass BucketsResultsJson {\n  private static jsonConvert = new JsonConvert();\n\n  static Create(jsonObject: unknown): BucketsResultsJson {\n    return BucketsResultsJson.jsonConvert.deserializeObject(\n      jsonObject,\n      BucketsResultsJson\n    );\n  }\n\n  @JsonProperty('@odata.count', Number)\n  count = 0;\n\n  @JsonProperty('@search.facets')\n  results: { [key: string]: BucketsResultsFacetJson[] } = {};\n}\n\nexport default BucketsResultsJson;\n","class Utils {\n  static extractPathFromUrl = (url: string, separator = '/'): string => {\n    return url.split('/').slice(-2).join(separator);\n  };\n}\n\nexport default Utils;\n","import React, { PureComponent } from 'react';\n\nimport { Spinner } from 'react-bootstrap';\n\nexport enum SearchStatusType {\n  Applications,\n  Buckets,\n}\n\nconst SearchStatusTypeMap: Record<SearchStatusType, string> = {\n  [SearchStatusType.Applications]: 'applications',\n  [SearchStatusType.Buckets]: 'buckets',\n};\n\ntype SearchStatusProps = {\n  query?: string;\n  resultsCount: number;\n  searching: boolean;\n  type: SearchStatusType;\n};\n\nclass SearchStatus extends PureComponent<SearchStatusProps> {\n  render(): JSX.Element {\n    const { searching, resultsCount, query, type } = this.props;\n    const typeDescription = SearchStatusTypeMap[type];\n\n    if (searching) {\n      return (\n        <span>\n          <span>Searching for matching {typeDescription}...</span>{' '}\n          <Spinner animation=\"border\" size=\"sm\" variant=\"secondary\" />\n        </span>\n      );\n    }\n\n    let formattedQuery = <span />;\n    if (query) {\n      formattedQuery = (\n        <span>\n          {' '}\n          for &apos;<strong>{query}</strong>&apos;\n        </span>\n      );\n    }\n\n    if (resultsCount) {\n      return (\n        <span>\n          Found {resultsCount} {typeDescription}\n          {formattedQuery}.\n        </span>\n      );\n    }\n\n    return <span>No result found{formattedQuery}.</span>;\n  }\n}\n\nexport default SearchStatus;\n","import React, { PureComponent } from 'react';\n\nimport { OverlayTrigger, Tooltip } from 'react-bootstrap';\nimport { GoVerified } from 'react-icons/go';\n\nconst DELAY_TOOLTIP = 250;\nconst ICON_COLOR = '#2E86C1';\n\nclass KnownBucketIcon extends PureComponent {\n  render(): JSX.Element {\n    return (\n      <OverlayTrigger\n        placement=\"auto\"\n        delay={DELAY_TOOLTIP}\n        overlay={<Tooltip id=\"tooltip\">Well known bucket</Tooltip>}\n      >\n        <GoVerified className=\"ml-1 faIconVerticalAlign\" color={ICON_COLOR} />\n      </OverlayTrigger>\n    );\n  }\n}\n\nexport default KnownBucketIcon;\n","import React, { PureComponent } from 'react';\n\nimport { Container, Col, Row, InputGroup, Form } from 'react-bootstrap';\nimport Table from 'react-bootstrap/Table';\nimport { Link } from 'react-router-dom';\n\nimport BucketsResultsJson from '../serialization/BucketsResultsJson';\nimport Utils from '../utils';\nimport KnownBucketIcon from './KnownBucketIcon';\nimport SearchStatus, { SearchStatusType } from './SearchStatus';\n\ntype Bucket = {\n  bucket: string;\n  manifests: number;\n  official: boolean;\n};\n\ntype BucketsState = {\n  searching: boolean;\n  sortIndex: number;\n  results: Bucket[];\n};\n\nclass Buckets extends PureComponent<unknown, BucketsState> {\n  private abortController: AbortController = new AbortController();\n\n  private sortModes: string[] = ['Default', 'Name', 'Manifests'];\n\n  constructor(props: unknown) {\n    super(props);\n\n    this.state = {\n      searching: false,\n      sortIndex: 0,\n      results: [],\n    };\n  }\n\n  async componentDidMount(): Promise<void> {\n    const { sortIndex } = this.state;\n\n    this.setState({\n      searching: true,\n      results: [],\n    });\n\n    const officialBuckets = await this.fetchDataAsync(\n      this.abortController.signal,\n      true\n    );\n    const communityBuckets = await this.fetchDataAsync(\n      this.abortController.signal,\n      false\n    );\n\n    let results: Bucket[] = officialBuckets.results['Metadata/Repository']\n      .map<Bucket>((item) => {\n        return { bucket: item.value, manifests: item.count, official: true };\n      })\n      .concat(\n        communityBuckets.results['Metadata/Repository'].map<Bucket>((item) => {\n          return { bucket: item.value, manifests: item.count, official: false };\n        })\n      );\n\n    results = this.sortResults(results, sortIndex);\n    this.setState({\n      searching: false,\n      results,\n    });\n  }\n\n  componentWillUnmount(): void {\n    this.abortController.abort();\n  }\n\n  handleSortChange = (e: React.ChangeEvent<HTMLSelectElement>): void => {\n    const { results } = this.state;\n    const sortOrder = e.target.selectedIndex;\n    this.setState({\n      sortIndex: sortOrder,\n      results: this.sortResults(results, sortOrder),\n    });\n  };\n\n  // eslint-disable-next-line class-methods-use-this\n  async fetchDataAsync(\n    abortSignal: AbortSignal,\n    officialRepository: boolean\n  ): Promise<BucketsResultsJson> {\n    const {\n      REACT_APP_AZURESEARCH_URL,\n      REACT_APP_AZURESEARCH_KEY,\n    } = process.env;\n\n    if (!REACT_APP_AZURESEARCH_URL) {\n      throw new Error('REACT_APP_AZURESEARCH_URL is not defined');\n    }\n\n    if (!REACT_APP_AZURESEARCH_KEY) {\n      throw new Error('REACT_APP_AZURESEARCH_KEY is not defined');\n    }\n\n    const url = `${REACT_APP_AZURESEARCH_URL}/search?api-version=2020-06-30`;\n\n    const response = await fetch(url, {\n      method: 'POST',\n      body: JSON.stringify({\n        count: true,\n        facets: ['Metadata/Repository,count:10000'],\n        filter: `Metadata/OfficialRepositoryNumber eq ${\n          officialRepository ? '1' : '0'\n        }`,\n        top: 0, // Don't retrieve actual data\n      }),\n      headers: {\n        'api-key': REACT_APP_AZURESEARCH_KEY,\n        'Content-Type': 'application/json',\n      },\n      signal: abortSignal,\n    });\n    const data = (await response.json()) as unknown;\n    return BucketsResultsJson.Create(data);\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  sortResults(results: Bucket[], sortOrder: number): Bucket[] {\n    switch (sortOrder) {\n      case 0:\n        return results.sort((x, y) => {\n          if (x.official === y.official) {\n            return x.bucket.localeCompare(y.bucket);\n          }\n          if (x.official < y.official) {\n            return 1;\n          }\n\n          return -1;\n        });\n\n      case 1:\n        return results.sort((x, y) => x.bucket.localeCompare(y.bucket));\n\n      case 2:\n        return results.sort((x, y) => {\n          if (x.manifests === y.manifests) {\n            return 0;\n          }\n          if (x.manifests < y.manifests) {\n            return 1;\n          }\n\n          return -1;\n        });\n      default:\n        throw new Error('Unexpected sort');\n    }\n  }\n\n  render(): JSX.Element {\n    const { results, searching } = this.state;\n    return (\n      <>\n        <Container className=\"mt-5 mb-5\">\n          <Row>\n            <Col className=\"my-auto\">\n              <SearchStatus\n                resultsCount={results.length}\n                searching={searching}\n                type={SearchStatusType.Buckets}\n              />\n            </Col>\n            <Col lg={3}>\n              <InputGroup size=\"sm\">\n                <InputGroup.Prepend>\n                  <InputGroup.Text>Sort by</InputGroup.Text>\n                </InputGroup.Prepend>\n                <Form.Control\n                  as=\"select\"\n                  size=\"sm\"\n                  custom\n                  onChange={this.handleSortChange}\n                >\n                  {this.sortModes.map((item, idx) => (\n                    <option key={item} value={idx}>\n                      {item}\n                    </option>\n                  ))}\n                </Form.Control>\n              </InputGroup>\n            </Col>\n          </Row>\n\n          {results && (\n            <Row className=\"mt-2\">\n              <Col>\n                <Table striped bordered hover>\n                  <thead>\n                    <tr>\n                      <th>Bucket</th>\n                      <th>Manifests</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {results.map((item: Bucket) => (\n                      <tr key={item.bucket}>\n                        <td>\n                          <Link\n                            to={{\n                              pathname: '/apps',\n                              search: encodeURIComponent(`\"${item.bucket}\"`),\n                            }}\n                          >\n                            {Utils.extractPathFromUrl(item.bucket)}\n                          </Link>{' '}\n                          {item.official && <KnownBucketIcon />}\n                        </td>\n                        <td>{item.manifests}</td>\n                      </tr>\n                    ))}\n                  </tbody>\n                </Table>\n              </Col>\n            </Row>\n          )}\n        </Container>\n      </>\n    );\n  }\n}\n\nexport default Buckets;\n","import React, { PureComponent } from 'react';\n\nimport { Navbar, Nav } from 'react-bootstrap';\nimport { FaGithub } from 'react-icons/fa';\nimport { Link } from 'react-router-dom';\n\nclass NavBar extends PureComponent {\n  render(): JSX.Element {\n    return (\n      <Navbar expand=\"sm\" bg=\"dark\" variant=\"dark\">\n        <Navbar.Brand as={Link} to=\"/\">\n          ScoopSearch\n        </Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n        <Navbar.Collapse id=\"responsive-navbar-nav\">\n          <Nav className=\"mr-auto\">\n            <Nav.Link as={Link} to=\"/apps\">\n              Apps\n            </Nav.Link>\n            <Nav.Link as={Link} to=\"/buckets\">\n              Buckets\n            </Nav.Link>\n          </Nav>\n          <Nav>\n            <Nav.Link href=\"https://github.com/ScoopSearch\">\n              <FaGithub size=\"1.2em\" />\n            </Nav.Link>\n          </Nav>\n        </Navbar.Collapse>\n      </Navbar>\n    );\n  }\n}\n\nexport default NavBar;\n","import React, { PureComponent } from 'react';\n\ntype CopyToClipboardHandlerProps = {\n  content?: string;\n  onContentCopied: () => void;\n};\n\nclass CopyToClipboardHandler extends PureComponent<\n  CopyToClipboardHandlerProps\n> {\n  private textAreaRef = React.createRef<HTMLTextAreaElement>();\n\n  componentDidUpdate(): void {\n    const { content, onContentCopied } = this.props;\n    if (content) {\n      const textArea = this.textAreaRef.current;\n      if (textArea) {\n        textArea.value = content;\n        textArea.select();\n        document.execCommand('copy');\n        textArea.blur();\n\n        onContentCopied();\n      }\n    }\n  }\n\n  render(): JSX.Element {\n    return (\n      <textarea\n        ref={this.textAreaRef}\n        readOnly\n        style={{ position: 'absolute', left: -9999 }}\n      />\n    );\n  }\n}\n\nexport default CopyToClipboardHandler;\n","import React, { PureComponent } from 'react';\n\nimport { Form, InputGroup } from 'react-bootstrap';\nimport { FaSearch } from 'react-icons/fa';\n\nconst DELAY_SEARCH_AFTER_KEYPRESS = 250;\n\ntype SearchBarProps = {\n  query: string;\n  onQueryChange: (query: string) => void;\n  onSubmit: () => void;\n};\n\nclass SearchBar extends PureComponent<SearchBarProps> {\n  searchInput: React.RefObject<HTMLInputElement>;\n\n  delayBeforeSubmit?: NodeJS.Timeout;\n\n  constructor(props: SearchBarProps) {\n    super(props);\n    this.searchInput = React.createRef<HTMLInputElement>();\n  }\n\n  componentDidMount(): void {\n    this.searchInput.current?.focus();\n  }\n\n  componentWillUnmount(): void {\n    this.clearDelayBeforeSubmitTimeout();\n  }\n\n  handleChange = (e: React.ChangeEvent<HTMLInputElement>): void => {\n    const { onQueryChange, onSubmit } = this.props;\n    onQueryChange(e.target.value);\n\n    this.clearDelayBeforeSubmitTimeout();\n    this.delayBeforeSubmit = setTimeout(onSubmit, DELAY_SEARCH_AFTER_KEYPRESS);\n  };\n\n  handleSubmit = (e: React.FormEvent<HTMLFormElement>): void => {\n    const { onSubmit } = this.props;\n    e.preventDefault();\n\n    this.clearDelayBeforeSubmitTimeout();\n    onSubmit();\n  };\n\n  clearDelayBeforeSubmitTimeout(): void {\n    if (this.delayBeforeSubmit) {\n      clearTimeout(this.delayBeforeSubmit);\n      this.delayBeforeSubmit = undefined;\n    }\n  }\n\n  render(): JSX.Element {\n    const { query } = this.props;\n\n    return (\n      <Form onSubmit={this.handleSubmit}>\n        <InputGroup>\n          <InputGroup.Prepend>\n            <InputGroup.Text>\n              <FaSearch />\n            </InputGroup.Text>\n          </InputGroup.Prepend>\n          <Form.Control\n            ref={this.searchInput}\n            size=\"lg\"\n            type=\"text\"\n            placeholder=\"Search an app\"\n            value={query}\n            onChange={this.handleChange}\n          />\n        </InputGroup>\n      </Form>\n    );\n  }\n}\n\nexport default SearchBar;\n","import React, { PureComponent } from 'react';\n\nimport { Pagination } from 'react-bootstrap';\n\nconst PAGINATION_OFFSET = 2;\n\ntype SearchPaginationProps = {\n  currentPage: number;\n  resultsCount: number;\n  resultsPerPage: number;\n  onPageChange: (newPage: number) => void;\n};\n\nclass SearchPagination extends PureComponent<SearchPaginationProps> {\n  changePage = (page: number): void => {\n    const { resultsCount, resultsPerPage, onPageChange } = this.props;\n    const totalPages = Math.ceil(resultsCount / resultsPerPage);\n    const newPage = Math.max(1, Math.min(page, totalPages));\n    onPageChange(newPage);\n  };\n\n  render(): JSX.Element {\n    const { currentPage, resultsCount, resultsPerPage } = this.props;\n    if (resultsCount > 0) {\n      const totalPages = Math.ceil(resultsCount / resultsPerPage);\n      if (totalPages > 1) {\n        const paginationItems = [];\n\n        let minPage = Math.max(2, currentPage - PAGINATION_OFFSET);\n        let maxPage = Math.min(totalPages - 1, currentPage + PAGINATION_OFFSET);\n\n        // Offset minPage and maxPage to always have\n        // the same number of pagination items\n        const maxPageOffset = PAGINATION_OFFSET * 2 - (maxPage - minPage);\n        const minPageOffset = maxPage - (maxPage + maxPageOffset);\n        maxPage = Math.min(totalPages - 1, maxPage + maxPageOffset);\n        minPage = Math.max(2, minPage + minPageOffset);\n\n        for (let pageIdx = minPage; pageIdx <= maxPage; pageIdx += 1) {\n          if (\n            pageIdx === currentPage - PAGINATION_OFFSET + minPageOffset ||\n            pageIdx === currentPage + PAGINATION_OFFSET + maxPageOffset\n          ) {\n            paginationItems.push(\n              <Pagination.Ellipsis key={pageIdx} disabled />\n            );\n          } else {\n            paginationItems.push(\n              <Pagination.Item\n                key={pageIdx}\n                active={pageIdx === currentPage}\n                onClick={() => this.changePage(pageIdx)}\n              >\n                {pageIdx}\n              </Pagination.Item>\n            );\n          }\n        }\n\n        return (\n          <Pagination size=\"sm\">\n            <Pagination.Prev\n              key=\"prev\"\n              onClick={() => this.changePage(currentPage - 1)}\n            />\n            <Pagination.Item\n              key={1}\n              active={currentPage === 1}\n              onClick={() => this.changePage(1)}\n            >\n              {1}\n            </Pagination.Item>\n            {paginationItems}\n            <Pagination.Item\n              key={totalPages}\n              active={totalPages === currentPage}\n              onClick={() => this.changePage(totalPages)}\n            >\n              {totalPages}\n            </Pagination.Item>\n            <Pagination.Next\n              key=\"next\"\n              onClick={() => this.changePage(currentPage + 1)}\n            />\n          </Pagination>\n        );\n      }\n    }\n\n    return <></>;\n  }\n}\n\nexport default SearchPagination;\n","/* eslint-disable class-methods-use-this */\nimport { JsonConverter, JsonCustomConvert } from 'json2typescript';\n\n@JsonConverter\nclass DateConverter implements JsonCustomConvert<Date> {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  serialize(date: Date): unknown {\n    throw new Error('Conversion not supported');\n  }\n\n  deserialize(date: string): Date {\n    return new Date(date);\n  }\n}\n\nexport default DateConverter;\n","import { JsonObject, JsonProperty } from 'json2typescript';\n\nimport DateConverter from './DateConverter';\n\n@JsonObject('MetadataJson')\nclass MetadataJson {\n  @JsonProperty('Repository', String)\n  repository = '';\n\n  @JsonProperty('OfficialRepository', Boolean)\n  repositoryOfficial = false;\n\n  @JsonProperty('RepositoryStars', Number)\n  stars = 0;\n\n  @JsonProperty('BranchName', String, true)\n  branchName?: string = '';\n\n  @JsonProperty('FilePath', String)\n  filePath = '';\n\n  @JsonProperty('AuthorName', String)\n  authorName = '';\n\n  @JsonProperty('Committed', DateConverter)\n  committed: Date = new Date();\n\n  @JsonProperty('Sha', String)\n  sha = '';\n}\n\nexport default MetadataJson;\n","import { JsonObject, JsonProperty, Any } from 'json2typescript';\n\nimport MetadataJson from './MetadataJson';\n\ntype HighLight = string | undefined;\n\ntype HighLights = { [propertyName: string]: string } | undefined;\n\n@JsonObject('ManifestJson')\nclass ManifestJson {\n  @JsonProperty('Id', String)\n  id = '';\n\n  @JsonProperty('@search.score', Number)\n  score = 0;\n\n  @JsonProperty('Name', String)\n  name = '';\n\n  @JsonProperty('NamePartial', String)\n  namePartial = '';\n\n  @JsonProperty('NameSuffix', String)\n  nameSuffix = '';\n\n  @JsonProperty('Description', String, true)\n  description?: string = undefined;\n\n  @JsonProperty('Homepage', String, true)\n  homepage?: string = undefined;\n\n  @JsonProperty('License', String, true)\n  license?: string = undefined;\n\n  @JsonProperty('Version', String, true)\n  version = '';\n\n  @JsonProperty('Metadata', MetadataJson)\n  metadata: MetadataJson = new MetadataJson();\n\n  @JsonProperty('@search.highlights', Any, true)\n  private highlights: HighLights = undefined;\n\n  get highlightedName(): HighLight {\n    return this.tryGetHighlights(\n      ['Name', 'NamePartial', 'NameSuffix'],\n      this.name\n    );\n  }\n\n  get highlightedLicense(): HighLight {\n    return this.tryGetHighlight('License', this.license);\n  }\n\n  get highlightedRepository(): HighLight {\n    return this.tryGetHighlight(\n      'Metadata/Repository',\n      this.metadata.repository.replace('https://github.com/', '')\n    );\n  }\n\n  get highlightedAuthorName(): HighLight {\n    return this.tryGetHighlight(\n      'Metadata/AuthorName',\n      this.metadata.authorName\n    );\n  }\n\n  get highlightedDescription(): HighLight {\n    return this.tryGetHighlight('Description', this.description);\n  }\n\n  get highlightedVersion(): HighLight {\n    return this.tryGetHighlight('Version', this.version);\n  }\n\n  tryGetHighlight(propertyName: string, fallback?: string): HighLight {\n    return this.tryGetHighlights([propertyName], fallback);\n  }\n\n  tryGetHighlights(propertyNames: string[], fallback?: string): HighLight {\n    const match = propertyNames.find((value: string) => {\n      return this.highlights && this.highlights[value];\n    });\n\n    return match && this.highlights ? this.highlights[match] : fallback;\n  }\n\n  get favicon(): HighLight {\n    if (this.homepage) {\n      const parser = document.createElement('a');\n      parser.href = this.homepage;\n\n      return `${parser.origin}/favicon.ico`;\n    }\n\n    return undefined;\n  }\n}\n\nexport default ManifestJson;\n","import { JsonObject, JsonConvert, JsonProperty } from 'json2typescript';\n\nimport ManifestJson from './ManifestJson';\n\n@JsonObject('SearchResultsJson')\nclass SearchResultsJson {\n  private static jsonConvert = new JsonConvert();\n\n  static Create(jsonObject: unknown): SearchResultsJson {\n    return SearchResultsJson.jsonConvert.deserializeObject(\n      jsonObject,\n      SearchResultsJson\n    );\n  }\n\n  @JsonProperty('@odata.count', Number)\n  count = 0;\n\n  @JsonProperty('value', [ManifestJson])\n  results: ManifestJson[] = Array<ManifestJson>();\n}\n\nexport default SearchResultsJson;\n","import React, { PureComponent } from 'react';\n\nimport { Col, Row, Form, InputGroup } from 'react-bootstrap';\n\nimport SearchResultsJson from '../serialization/SearchResultsJson';\nimport SearchStatus, { SearchStatusType } from './SearchStatus';\n\ntype SortMode = {\n  DisplayName: string;\n  OrderBy: string[];\n};\n\ntype SearchProcessorProps = {\n  page: number;\n  query: string;\n  sortIndex: number;\n  resultsPerPage: number;\n  onResultsChange: (value?: SearchResultsJson) => void;\n  onSortIndexChange: (sortIndex: number) => void;\n};\n\ntype SearchProcessorState = {\n  resultsCount: number;\n  searching: boolean;\n};\n\nclass SearchProcessor extends PureComponent<\n  SearchProcessorProps,\n  SearchProcessorState\n> {\n  private abortController: AbortController = new AbortController();\n\n  private sortModes: SortMode[] = [\n    {\n      DisplayName: 'Best match',\n      OrderBy: [\n        'search.score() desc',\n        'Metadata/OfficialRepositoryNumber desc',\n        'NameSortable asc',\n      ],\n    },\n    {\n      DisplayName: 'Name',\n      OrderBy: [\n        'NameSortable asc',\n        'Metadata/OfficialRepositoryNumber desc',\n        'Metadata/RepositoryStars desc',\n        'Metadata/Committed desc',\n      ],\n    },\n    {\n      DisplayName: 'Newest',\n      OrderBy: [\n        'Metadata/Committed desc',\n        'Metadata/OfficialRepositoryNumber desc',\n        'Metadata/RepositoryStars desc',\n      ],\n    },\n  ];\n\n  constructor(props: SearchProcessorProps) {\n    super(props);\n\n    this.state = {\n      resultsCount: 0,\n      searching: false,\n    };\n  }\n\n  componentDidMount(): void {\n    const { query } = this.props;\n    this.fetchDataAsync(this.abortController.signal, query);\n  }\n\n  componentDidUpdate(\n    prevProps: SearchProcessorProps,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    prevState: SearchProcessorState\n  ): void {\n    const { query, page, sortIndex } = this.props;\n    if (\n      query !== prevProps.query ||\n      page !== prevProps.page ||\n      sortIndex !== prevProps.sortIndex\n    ) {\n      this.abortController.abort();\n      this.abortController = new AbortController();\n      this.fetchDataAsync(this.abortController.signal, query);\n    }\n  }\n\n  componentWillUnmount(): void {\n    this.abortController.abort();\n  }\n\n  handleSortChange = (e: React.ChangeEvent<HTMLSelectElement>): void => {\n    const { onSortIndexChange } = this.props;\n    onSortIndexChange(e.target.selectedIndex);\n  };\n\n  fetchDataAsync(abortSignal: AbortSignal, query: string): void {\n    this.setState({\n      searching: true,\n    });\n\n    const {\n      REACT_APP_AZURESEARCH_URL,\n      REACT_APP_AZURESEARCH_KEY,\n    } = process.env;\n\n    if (!REACT_APP_AZURESEARCH_URL) {\n      throw new Error('REACT_APP_AZURESEARCH_URL is not defined');\n    }\n\n    if (!REACT_APP_AZURESEARCH_KEY) {\n      throw new Error('REACT_APP_AZURESEARCH_KEY is not defined');\n    }\n\n    const url = `${REACT_APP_AZURESEARCH_URL}/search?api-version=2020-06-30`;\n    const { sortIndex, page, resultsPerPage, onResultsChange } = this.props;\n    fetch(url, {\n      method: 'POST',\n      body: JSON.stringify({\n        count: true,\n        search: query.trim(),\n        searchMode: 'all',\n        orderby: this.sortModes[sortIndex].OrderBy.join(', '),\n        skip: (page - 1) * resultsPerPage,\n        top: resultsPerPage,\n        select: [\n          'Id',\n          'Name',\n          'NamePartial',\n          'NameSuffix',\n          'Description',\n          'Homepage',\n          'License',\n          'Version',\n          'Metadata/Repository',\n          'Metadata/FilePath',\n          'Metadata/AuthorName',\n          'Metadata/OfficialRepository',\n          'Metadata/RepositoryStars',\n          'Metadata/Committed',\n          'Metadata/Sha',\n        ].join(','),\n        highlight: [\n          'Name',\n          'NamePartial',\n          'NameSuffix',\n          'Description',\n          'Version',\n          'License',\n          'Metadata/Repository',\n          'Metadata/AuthorName',\n        ].join(','),\n        highlightPreTag: '<mark>',\n        highlightPostTag: '</mark>',\n      }),\n      headers: {\n        'api-key': REACT_APP_AZURESEARCH_KEY,\n        'Content-Type': 'application/json',\n      },\n      signal: abortSignal,\n    })\n      .then((response) => {\n        if (!response.ok) {\n          throw new Error(`${response.status} ${response.statusText}`);\n        }\n\n        return response.json();\n      })\n      .then((data) => {\n        const results = SearchResultsJson.Create(data);\n\n        this.setState({\n          searching: false,\n          resultsCount: results.count,\n        });\n        onResultsChange(results);\n      })\n      .catch((error: Error) => {\n        if (error.name !== 'AbortError') {\n          this.setState({\n            searching: false,\n            resultsCount: 0,\n          });\n          onResultsChange(undefined);\n        }\n      });\n  }\n\n  render(): JSX.Element {\n    const { query, sortIndex } = this.props;\n    const { resultsCount, searching } = this.state;\n    return (\n      <Form>\n        <Row>\n          <Col className=\"my-auto\">\n            <SearchStatus\n              query={query}\n              resultsCount={resultsCount}\n              searching={searching}\n              type={SearchStatusType.Applications}\n            />\n          </Col>\n          <Col lg={3}>\n            <InputGroup size=\"sm\">\n              <InputGroup.Prepend>\n                <InputGroup.Text>Sort by</InputGroup.Text>\n              </InputGroup.Prepend>\n              <Form.Control\n                as=\"select\"\n                size=\"sm\"\n                custom\n                value={sortIndex}\n                onChange={this.handleSortChange}\n              >\n                {this.sortModes.map((item, idx) => (\n                  <option key={item.DisplayName} value={idx}>\n                    {item.DisplayName}\n                  </option>\n                ))}\n              </Form.Control>\n            </InputGroup>\n          </Col>\n        </Row>\n      </Form>\n    );\n  }\n}\n\nexport default SearchProcessor;\n","import React, { PureComponent } from 'react';\n\nimport { Button } from 'react-bootstrap';\nimport { FaClipboard, FaCheck } from 'react-icons/fa';\n\nconst CLIPBOARD_COPY_NOTIFICATION = 1500;\n\ntype CopyToClipboardButtonState = {\n  copied: boolean;\n};\n\ntype CopyToClipboardButtonProps = {\n  className?: string;\n  onClick: () => void;\n};\n\nclass CopyToClipboardButton extends PureComponent<\n  CopyToClipboardButtonProps,\n  CopyToClipboardButtonState\n> {\n  constructor(props: CopyToClipboardButtonProps) {\n    super(props);\n    this.state = { copied: false };\n  }\n\n  componentDidUpdate(\n    prevProps: CopyToClipboardButtonProps,\n    prevState: CopyToClipboardButtonState\n  ): void {\n    const { copied } = this.state;\n    if (copied && copied !== prevState.copied) {\n      setTimeout(() => {\n        this.setState({ copied: false });\n      }, CLIPBOARD_COPY_NOTIFICATION);\n    }\n  }\n\n  handleClick = (): void => {\n    const { onClick } = this.props;\n    onClick();\n    this.setState({ copied: true });\n  };\n\n  render(): JSX.Element {\n    const { className } = this.props;\n    const { copied } = this.state;\n\n    return (\n      <Button\n        className={className}\n        variant=\"secondary\"\n        onClick={this.handleClick}\n        disabled={copied}\n      >\n        {copied ? (\n          <FaCheck className=\"faIconVerticalAlign\" />\n        ) : (\n          <FaClipboard className=\"faIconVerticalAlign\" />\n        )}\n      </Button>\n    );\n  }\n}\n\nexport default CopyToClipboardButton;\n","import React, { PureComponent } from 'react';\n\nimport { Badge } from 'react-bootstrap';\nimport { FaStar } from 'react-icons/fa';\n\ntype StarsBadgeProps = {\n  stars: number;\n};\n\nclass StarsBadge extends PureComponent<StarsBadgeProps> {\n  render(): JSX.Element {\n    const { stars } = this.props;\n\n    return (\n      <Badge variant=\"secondary\" className=\"ml-1 starsBadge\">\n        <span>{stars}</span> <FaStar />\n      </Badge>\n    );\n  }\n}\n\nexport default StarsBadge;\n","import React, { PureComponent } from 'react';\n\nimport dayjs from 'dayjs';\nimport localizedFormat from 'dayjs/plugin/localizedFormat';\nimport { Card, Col, Container, Form, InputGroup, Row } from 'react-bootstrap';\nimport { FaExternalLinkAlt } from 'react-icons/fa';\nimport { Img } from 'react-image';\n\nimport ManifestJson from '../serialization/ManifestJson';\nimport Utils from '../utils';\nimport CopyToClipboardButton from './CopyToClipboardButton';\nimport KnownBucketIcon from './KnownBucketIcon';\nimport StarsBadge from './StarsBadge';\n\ndayjs.extend(localizedFormat);\n\ntype SearchResultProps = {\n  result: ManifestJson;\n  onCopyToClipbard: (content: string) => void;\n};\n\nclass SearchResult extends PureComponent<SearchResultProps> {\n  handleCopyToClipboard = (content: string): void => {\n    const { onCopyToClipbard } = this.props;\n    onCopyToClipbard(content);\n  };\n\n  private displayHighlight = (content?: string) => {\n    return (\n      content && (\n        <span\n          // eslint-disable-next-line react/no-danger\n          dangerouslySetInnerHTML={{\n            __html: content,\n          }}\n        />\n      )\n    );\n  };\n\n  render(): JSX.Element {\n    const { result } = this.props;\n    const {\n      id,\n      score,\n      name,\n      favicon,\n      highlightedName,\n      highlightedDescription,\n      highlightedLicense,\n      highlightedRepository,\n      highlightedAuthorName,\n      highlightedVersion,\n      metadata,\n      homepage,\n    } = result;\n\n    return (\n      <Card key={id} className=\"mb-2\">\n        <Card.Header>\n          {favicon && (\n            <Img className=\"mr-2\" src={favicon} width={20} height={20} />\n          )}\n          <strong>{this.displayHighlight(highlightedName)}</strong>\n          {' - '}\n          {this.displayHighlight(highlightedVersion)}\n          {metadata.repositoryOfficial && <KnownBucketIcon />}\n          {process.env.NODE_ENV === 'development' && ` - @score: ${score}`}\n        </Card.Header>\n        <Card.Body>\n          <Container>\n            {highlightedDescription && (\n              <Row className=\"mb-3\">\n                <Col>{this.displayHighlight(highlightedDescription)}</Col>\n              </Row>\n            )}\n            <small>\n              <Row>\n                <Col lg={6}>\n                  Updated: {dayjs(metadata.committed).format('LLL')}\n                </Col>\n                <Col lg={6}>\n                  License: {this.displayHighlight(highlightedLicense)}\n                </Col>\n              </Row>\n\n              <Row className=\"mb-2\">\n                <Col lg={6}>\n                  Bucket:{' '}\n                  <a href={metadata.repository}>\n                    {this.displayHighlight(highlightedRepository)}\n                  </a>\n                  <StarsBadge stars={metadata.stars} />\n                  {metadata.repositoryOfficial && <KnownBucketIcon />}\n                  {!metadata.repositoryOfficial && (\n                    <CopyToClipboardButton\n                      className=\"ml-1 ms copyToClipbardMiniButton\"\n                      onClick={() =>\n                        this.handleCopyToClipboard(\n                          `scoop bucket add ${Utils.extractPathFromUrl(\n                            metadata.repository,\n                            '_'\n                          )} ${metadata.repository}`\n                        )\n                      }\n                    />\n                  )}\n                </Col>\n                <Col lg={6}>\n                  Commiter: {this.displayHighlight(highlightedAuthorName)}\n                </Col>\n              </Row>\n              <Row className=\"text-center\" noGutters>\n                <Col lg xs={4} className=\"mt-1 mb-2\">\n                  <a href={homepage}>\n                    Homepage <FaExternalLinkAlt />\n                  </a>\n                </Col>\n                <Col lg xs={4} className=\"mt-1 mb-2\">\n                  <a\n                    href={`${metadata.repository}/blob/master/${metadata.filePath}`}\n                  >\n                    Manifest <FaExternalLinkAlt />\n                  </a>\n                </Col>\n                <Col lg xs={4} className=\"mt-1 mb-2\">\n                  <a href={`${metadata.repository}/commit/${metadata.sha}`}>\n                    Commit <FaExternalLinkAlt />\n                  </a>\n                </Col>\n                <Col lg={5}>\n                  <InputGroup size=\"sm\">\n                    <InputGroup.Prepend>\n                      <InputGroup.Text className=\"scoopCopyCommand border-right-0\">\n                        &gt;\n                      </InputGroup.Text>\n                    </InputGroup.Prepend>\n                    <Form.Control\n                      className=\"border-left-0\"\n                      readOnly\n                      type=\"text\"\n                      value={`scoop install ${name}`}\n                    />\n\n                    <InputGroup.Append>\n                      <CopyToClipboardButton\n                        onClick={() =>\n                          this.handleCopyToClipboard(`scoop install ${name}`)\n                        }\n                      />\n                    </InputGroup.Append>\n                  </InputGroup>\n                </Col>\n              </Row>\n            </small>\n          </Container>\n        </Card.Body>\n      </Card>\n    );\n  }\n}\n\nexport default SearchResult;\n","import React, { PureComponent } from 'react';\n\nimport { Container, Row, Col } from 'react-bootstrap';\nimport { RouteComponentProps } from 'react-router-dom';\n\nimport ManifestJson from '../serialization/ManifestJson';\nimport SearchResultsJson from '../serialization/SearchResultsJson';\nimport CopyToClipboardHandler from './CopyToClipboardHandler';\nimport SearchBar from './SearchBar';\nimport SearchPagination from './SearchPagination';\nimport SearchProcessor from './SearchProcessor';\nimport SearchResult from './SearchResult';\n\nconst RESULTS_PER_PAGE = 20;\n\ntype SearchParams = {\n  page?: string;\n};\n\ntype SearchProps = RouteComponentProps<SearchParams>;\n\ntype SearchState = {\n  searchBarQuery: string;\n  query: string;\n  currentPage: number;\n  sortIndex: number;\n  searchResults?: SearchResultsJson;\n  contentToCopy?: string;\n};\n\nclass Search extends PureComponent<SearchProps, SearchState> {\n  constructor(props: SearchProps) {\n    super(props);\n\n    const sortIndex = parseInt(sessionStorage.getItem('sortIndex') || '0', 10);\n    const queryfromUri = this.getQueryFromUri();\n\n    this.state = {\n      searchBarQuery: queryfromUri,\n      query: queryfromUri,\n      currentPage: this.getCurrentPageFromUri(),\n      sortIndex,\n    };\n  }\n\n  componentDidUpdate(prevProps: SearchProps): void {\n    // Used when url is updated manually\n    const { location } = this.props;\n    const queryfromUri = this.getQueryFromUri();\n    if (prevProps.location.search !== location.search) {\n      // eslint-disable-next-line react/no-did-update-set-state\n      this.setState({\n        searchBarQuery: queryfromUri,\n        query: queryfromUri,\n      });\n    }\n    if (prevProps.location.pathname !== location.pathname) {\n      // eslint-disable-next-line react/no-did-update-set-state\n      this.setState({ currentPage: this.getCurrentPageFromUri() });\n    }\n  }\n\n  getQueryFromUri = (): string => {\n    const { location } = this.props;\n    return location.search.length > 1\n      ? decodeURIComponent(location.search.substr(1))\n      : '';\n  };\n\n  getCurrentPageFromUri = (): number => {\n    const { match } = this.props;\n    return parseInt(match.params.page || '1', 10);\n  };\n\n  updateHistory = (\n    search: string | undefined = undefined,\n    pathname: string | undefined = undefined\n  ): void => {\n    const { history, location } = this.props;\n    history.replace({\n      search: search ?? location.search,\n      pathname: pathname ?? '/apps',\n    });\n  };\n\n  handleQueryChange = (query: string): void => {\n    this.updateHistory(encodeURIComponent(query), undefined);\n    this.setState({ searchBarQuery: query, currentPage: 1 });\n  };\n\n  handleQuerySubmit = (): void => {\n    const { searchBarQuery } = this.state;\n    this.setState({ query: searchBarQuery });\n  };\n\n  handleResultsChange = (e?: SearchResultsJson): void => {\n    this.setState({ searchResults: e });\n  };\n\n  handlePageChange = (newPage: number): void => {\n    this.updateHistory(undefined, `/apps/${newPage}`);\n    this.setState({ currentPage: newPage });\n  };\n\n  handleSortChange = (sortIndex: number): void => {\n    sessionStorage.setItem('sortIndex', sortIndex.toString());\n    this.setState({ sortIndex });\n  };\n\n  handleCopyToClipboard = (content: string): void => {\n    this.setState({ contentToCopy: content });\n  };\n\n  handleContentCopied = (): void => {\n    this.setState({ contentToCopy: undefined });\n  };\n\n  render(): JSX.Element {\n    const {\n      contentToCopy,\n      searchBarQuery,\n      query,\n      currentPage,\n      sortIndex,\n      searchResults,\n    } = this.state;\n    return (\n      <div className=\"Search\">\n        <CopyToClipboardHandler\n          content={contentToCopy}\n          onContentCopied={this.handleContentCopied}\n        />\n\n        <Container className=\"mt-5 mb-5\">\n          <Row className=\"justify-content-center\">\n            <Col sm={8}>\n              <SearchBar\n                query={searchBarQuery}\n                onQueryChange={this.handleQueryChange}\n                onSubmit={this.handleQuerySubmit}\n              />\n            </Col>\n          </Row>\n\n          <Row className=\"mt-5 mb-1\">\n            <Col>\n              <SearchProcessor\n                resultsPerPage={RESULTS_PER_PAGE}\n                page={currentPage}\n                query={query}\n                sortIndex={sortIndex}\n                onResultsChange={this.handleResultsChange}\n                onSortIndexChange={this.handleSortChange}\n              />\n            </Col>\n          </Row>\n          <Row>\n            <Col className=\"d-flex justify-content-center\">\n              <SearchPagination\n                resultsPerPage={RESULTS_PER_PAGE}\n                currentPage={currentPage}\n                resultsCount={searchResults?.count ?? 0}\n                onPageChange={this.handlePageChange}\n              />\n            </Col>\n          </Row>\n\n          <Row className=\"mt-2\">\n            <Col>\n              {searchResults?.results.map((searchResult: ManifestJson) => (\n                <SearchResult\n                  key={searchResult.id}\n                  result={searchResult}\n                  onCopyToClipbard={this.handleCopyToClipboard}\n                />\n              ))}\n            </Col>\n          </Row>\n\n          <Row>\n            <Col className=\"d-flex justify-content-center\">\n              <SearchPagination\n                resultsPerPage={RESULTS_PER_PAGE}\n                currentPage={currentPage}\n                resultsCount={searchResults?.count ?? 0}\n                onPageChange={this.handlePageChange}\n              />\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default Search;\n","import React, { PureComponent } from 'react';\n\nimport './App.css';\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from 'react-router-dom';\n\nimport Buckets from './components/Buckets';\nimport NavBar from './components/NavBar';\nimport Search from './components/Search';\n\nclass App extends PureComponent {\n  render(): JSX.Element {\n    return (\n      <Router>\n        <NavBar />\n\n        <Switch>\n          <Route path=\"/apps/:page?\" component={Search} />\n          <Route path=\"/buckets\" component={Buckets} />\n          <Route path=\"/\">\n            <Redirect to=\"/apps\" />\n          </Route>\n        </Switch>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\n\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}